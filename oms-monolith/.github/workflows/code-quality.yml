name: Code Quality Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest
    
    - name: Check for circular dependencies
      run: |
        python scripts/check_circular_deps.py
        if [ $? -ne 0 ]; then
          echo "::error::Circular dependencies detected!"
          exit 1
        fi
    
    - name: Check for hardcoded localhost URLs
      run: |
        # Find localhost URLs in Python files (excluding only truly non-production code)
        LOCALHOST_COUNT=$(find . -name "*.py" -type f \
          -not -path "./tests/*" \
          -not -path "./docs/*" \
          -not -path "./.venv/*" \
          -not -path "./venv/*" \
          -not -path "./__pycache__/*" \
          -not -path "./migrations/*" \
          -not -path "./scripts/test_*" \
          -not -path "./scripts/dev_*" \
          -exec grep -E "(localhost:|127\.0\.0\.1:|http://localhost|redis://localhost|nats://localhost|ws://localhost|postgresql://localhost)" {} \; | \
          grep -v "^#" | \
          grep -v "# Allow" | \
          wc -l)
        
        # We expect 0 localhost URLs in production code
        if [ $LOCALHOST_COUNT -gt 0 ]; then
          echo "::error::Found $LOCALHOST_COUNT hardcoded localhost URLs! All localhost URLs must be replaced with environment variables or service names."
          find . -name "*.py" -type f \
            -not -path "./tests/*" \
            -not -path "./docs/*" \
            -not -path "./.venv/*" \
            -not -path "./venv/*" \
            -not -path "./__pycache__/*" \
            -not -path "./migrations/*" \
            -not -path "./scripts/test_*" \
            -not -path "./scripts/dev_*" \
            -exec grep -Hn -E "(localhost:|127\.0\.0\.1:|http://localhost|redis://localhost|nats://localhost|ws://localhost|postgresql://localhost)" {} \; | \
            grep -v "^#" | \
            grep -v "# Allow"
          exit 1
        fi
    
    - name: Check for catch-all exceptions
      run: |
        # Count catch-all exceptions (except Exception)
        CATCH_ALL_COUNT=$(find . -name "*.py" -type f \
          -not -path "./tests/*" \
          -exec grep -E "except\s+Exception\s*:" {} \; | \
          wc -l)
        
        if [ $CATCH_ALL_COUNT -gt 50 ]; then
          echo "::warning::Found $CATCH_ALL_COUNT catch-all exceptions (limit: 50)"
          echo "Consider using domain-specific exceptions from shared.exceptions"
        fi
    
    - name: Run Ruff linter
      run: |
        ruff check .
    
    - name: Check import order
      run: |
        ruff check --select I .
    
    - name: Security check
      run: |
        pip install bandit
        bandit -r . -ll -x tests/