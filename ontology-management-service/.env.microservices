# Microservices Mode Configuration
# Copy this to .env to enable microservices
# 점진적 마이그레이션: 모놀리스에서 마이크로서비스로 전환

# JWT Configuration (필수)
JWT_SECRET=your-very-secure-jwt-secret-key-here-change-in-production

# Environment
ENV=development
LOG_LEVEL=INFO

# Microservice Feature Flags
USE_EMBEDDING_MS=true
USE_SCHEDULER_MS=true
USE_EVENT_GATEWAY=true

# Data-Kernel Gateway (always enabled with microservices)
USE_DATA_KERNEL_GATEWAY=true

# Microservice Endpoints (adjust as needed)
EMBEDDING_SERVICE_ENDPOINT=embedding-service:50055
SCHEDULER_SERVICE_ENDPOINT=scheduler-service:50056
EVENT_GATEWAY_ENDPOINT=event-gateway:50057
DATA_KERNEL_GRPC_ENDPOINT=data-kernel:50051

# Service Discovery (for production)
CONSUL_URL=http://consul:8500
SERVICE_DISCOVERY_ENABLED=false

# Monitoring
ENABLE_TELEMETRY=true
JAEGER_ENDPOINT=http://jaeger:14268/api/traces
PROMETHEUS_GATEWAY_URL=http://prometheus:9091

# Resource Limits (for containerized deployment)
MAX_EMBEDDING_WORKERS=4
MAX_SCHEDULER_WORKERS=2
MAX_EVENT_WORKERS=3

# Performance Tuning
EMBEDDING_CACHE_SIZE=1000
SCHEDULER_POLL_INTERVAL=5
EVENT_BATCH_SIZE=100

# Failover Configuration
FAILOVER_TO_LOCAL=true
CIRCUIT_BREAKER_ENABLED=true
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=30

# Database Configuration
TERMINUSDB_ENDPOINT=http://terminusdb:6363
TERMINUSDB_USER=admin
TERMINUSDB_PASS=changeme-admin-pass

# Redis Configuration
REDIS_URL=redis://redis:6379

# NATS Configuration
NATS_URL=nats://nats:4222

# PostgreSQL Configuration
DATABASE_URL=postgresql://oms_user:oms_password@postgres:5432/oms_db

# User Service Configuration
USER_SERVICE_URL=http://user-service:8000

# CORS Configuration
CORS_ORIGINS=*

# IAM Configuration
USE_IAM_VALIDATION=false