{
  "summary": {
    "total_test_files": 369,
    "duplicate_groups": 177,
    "similar_groups": 159,
    "timestamp": "2025-07-12T05:24:11.594773"
  },
  "categories": {
    "jwt_auth": {
      "count": 142,
      "files": [
        {
          "path": "test_cleanup_analysis.py",
          "size": 13038,
          "modified": "2025-07-12T05:24:05.331715",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": true,
          "is_async": true
        },
        {
          "path": "test_cleanup_analysis.py",
          "size": 13038,
          "modified": "2025-07-12T05:24:05.331715",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": true,
          "is_async": true
        },
        {
          "path": "test_jwt_integration_proof.py",
          "size": 14549,
          "modified": "2025-07-12T02:15:18.251966",
          "test_count": 2,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_jwt_integration_proof.py",
          "size": 14549,
          "modified": "2025-07-12T02:15:18.251966",
          "test_count": 2,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_real_services_integration.py",
          "size": 22976,
          "modified": "2025-07-12T02:02:08.940965",
          "test_count": 7,
          "async_tests": 7,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_real_services_integration.py",
          "size": 22976,
          "modified": "2025-07-12T02:02:08.940965",
          "test_count": 7,
          "async_tests": 7,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_msa_integration_complete.py",
          "size": 19732,
          "modified": "2025-07-12T01:00:04.491096",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_msa_integration_complete.py",
          "size": 19732,
          "modified": "2025-07-12T01:00:04.491096",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "production_resilience_integration_test.py",
          "size": 44018,
          "modified": "2025-07-11T22:20:05.716550",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_resilience_dashboard.py",
          "size": 23485,
          "modified": "2025-07-11T22:16:20.091030",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_resilience_dashboard.py",
          "size": 23485,
          "modified": "2025-07-11T22:16:20.091030",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_adaptive_etag_caching.py",
          "size": 17940,
          "modified": "2025-07-11T22:11:54.342660",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_adaptive_etag_caching.py",
          "size": 17940,
          "modified": "2025-07-11T22:11:54.342660",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_distributed_circuit_breaker.py",
          "size": 22019,
          "modified": "2025-07-11T22:06:45.474655",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_distributed_circuit_breaker.py",
          "size": 22019,
          "modified": "2025-07-11T22:06:45.474655",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_circuit_with_server_errors.py",
          "size": 19479,
          "modified": "2025-07-11T22:02:16.114527",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_circuit_with_server_errors.py",
          "size": 19479,
          "modified": "2025-07-11T22:02:16.114527",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_global_circuit_breaker.py",
          "size": 21874,
          "modified": "2025-07-11T21:57:56.290999",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_global_circuit_breaker.py",
          "size": 21874,
          "modified": "2025-07-11T21:57:56.290999",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_etag_comprehensive.py",
          "size": 5782,
          "modified": "2025-07-11T21:45:49.940894",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_etag_comprehensive.py",
          "size": 5782,
          "modified": "2025-07-11T21:45:49.940894",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_circuit_breaker_specific.py",
          "size": 4130,
          "modified": "2025-07-11T20:58:47.820098",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_circuit_breaker_specific.py",
          "size": 4130,
          "modified": "2025-07-11T20:58:47.820098",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/api/v1/test_routes.py",
          "size": 4344,
          "modified": "2025-07-11T20:58:24.916797",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/api/v1/test_routes.py",
          "size": 4344,
          "modified": "2025-07-11T20:58:24.916797",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_oms_resilience_final.py",
          "size": 16038,
          "modified": "2025-07-11T20:31:32.166433",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_oms_resilience_final.py",
          "size": 16038,
          "modified": "2025-07-11T20:31:32.166433",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_container_integration.py",
          "size": 2286,
          "modified": "2025-07-11T17:49:17.429344",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_container_integration.py",
          "size": 2286,
          "modified": "2025-07-11T17:49:17.429344",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_jwt_decode.py",
          "size": 1619,
          "modified": "2025-07-11T17:42:05.787575",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_jwt_decode.py",
          "size": 1619,
          "modified": "2025-07-11T17:42:05.787575",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_jwt_in_container.py",
          "size": 1192,
          "modified": "2025-07-11T17:41:45.492929",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_jwt_in_container.py",
          "size": 1192,
          "modified": "2025-07-11T17:41:45.492929",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_jwt.py",
          "size": 2740,
          "modified": "2025-07-11T17:17:29.352307",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_jwt.py",
          "size": 2740,
          "modified": "2025-07-11T17:17:29.352307",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_login_only.py",
          "size": 2649,
          "modified": "2025-07-11T14:53:07.122168",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_login_only.py",
          "size": 2649,
          "modified": "2025-07-11T14:53:07.122168",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_jwt_local.py",
          "size": 7211,
          "modified": "2025-07-09T23:21:07.832529",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_audit_jwt_local.py",
          "size": 7211,
          "modified": "2025-07-09T23:21:07.832529",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_audit_jwt_config.py",
          "size": 5176,
          "modified": "2025-07-09T23:16:34.801033",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_audit_jwt_config.py",
          "size": 5176,
          "modified": "2025-07-09T23:16:34.801033",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_service_token_only.py",
          "size": 4824,
          "modified": "2025-07-09T22:19:22.031767",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_service_token_only.py",
          "size": 4824,
          "modified": "2025-07-09T22:19:22.031767",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_jwt_auth_simple.py",
          "size": 4382,
          "modified": "2025-07-09T22:18:39.081266",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_jwt_auth_simple.py",
          "size": 4382,
          "modified": "2025-07-09T22:18:39.081266",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_jwt_auth_complete.py",
          "size": 6745,
          "modified": "2025-07-09T22:16:32.452051",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_jwt_auth_complete.py",
          "size": 6745,
          "modified": "2025-07-09T22:16:32.452051",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "audit-service/test_env_loading.py",
          "size": 2536,
          "modified": "2025-07-09T22:09:30.178230",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "audit-service/test_env_loading.py",
          "size": 2536,
          "modified": "2025-07-09T22:09:30.178230",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/test_jwt_auth_fix.py",
          "size": 5499,
          "modified": "2025-07-09T22:09:03.030549",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/test_jwt_auth_fix.py",
          "size": 5499,
          "modified": "2025-07-09T22:09:03.030549",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_direct_validation.py",
          "size": 2220,
          "modified": "2025-07-09T19:52:09.448406",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_direct_validation.py",
          "size": 2220,
          "modified": "2025-07-09T19:52:09.448406",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_token_debug.py",
          "size": 2603,
          "modified": "2025-07-09T19:34:40.435481",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_token_debug.py",
          "size": 2603,
          "modified": "2025-07-09T19:34:40.435481",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_audit_auth.py",
          "size": 3417,
          "modified": "2025-07-09T19:32:49.768429",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_audit_auth.py",
          "size": 3417,
          "modified": "2025-07-09T19:32:49.768429",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_jwt_validation2.py",
          "size": 2488,
          "modified": "2025-07-09T19:30:47.340689",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_jwt_validation2.py",
          "size": 2488,
          "modified": "2025-07-09T19:30:47.340689",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_jwt_validation.py",
          "size": 3678,
          "modified": "2025-07-09T19:29:22.856550",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_jwt_validation.py",
          "size": 3678,
          "modified": "2025-07-09T19:29:22.856550",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_immediate_audit.py",
          "size": 2140,
          "modified": "2025-07-09T19:26:46.780664",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_immediate_audit.py",
          "size": 2140,
          "modified": "2025-07-09T19:26:46.780664",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_audit_with_service_token.py",
          "size": 3783,
          "modified": "2025-07-09T19:04:05.443120",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_audit_with_service_token.py",
          "size": 3783,
          "modified": "2025-07-09T19:04:05.443120",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_complete_flow.py",
          "size": 5260,
          "modified": "2025-07-09T19:03:11.400873",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_complete_flow.py",
          "size": 5260,
          "modified": "2025-07-09T19:03:11.400873",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_oms_audit_integration.py",
          "size": 4021,
          "modified": "2025-07-09T19:01:55.702040",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_oms_audit_integration.py",
          "size": 4021,
          "modified": "2025-07-09T19:01:55.702040",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_decode_service_token.py",
          "size": 2712,
          "modified": "2025-07-09T19:00:40.719677",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_decode_service_token.py",
          "size": 2712,
          "modified": "2025-07-09T19:00:40.719677",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_token_exchange_detailed.py",
          "size": 2210,
          "modified": "2025-07-09T18:57:08.199084",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_token_exchange_detailed.py",
          "size": 2210,
          "modified": "2025-07-09T18:57:08.199084",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "test_comprehensive_integration.py",
          "size": 11603,
          "modified": "2025-07-09T18:48:22.712525",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_comprehensive_integration.py",
          "size": 11603,
          "modified": "2025-07-09T18:48:22.712525",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_token_exchange.py",
          "size": 5561,
          "modified": "2025-07-09T18:45:50.504468",
          "test_count": 2,
          "async_tests": 2,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_token_exchange.py",
          "size": 5561,
          "modified": "2025-07-09T18:45:50.504468",
          "test_count": 2,
          "async_tests": 2,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_schemaless.py",
          "size": 2043,
          "modified": "2025-07-09T18:37:32.426622",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_schemaless.py",
          "size": 2043,
          "modified": "2025-07-09T18:37:32.426622",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_minimal_terminus.py",
          "size": 2316,
          "modified": "2025-07-09T18:37:02.844339",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_minimal_terminus.py",
          "size": 2316,
          "modified": "2025-07-09T18:37:02.844339",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_schema_direct.py",
          "size": 2035,
          "modified": "2025-07-09T18:34:55.813961",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_schema_direct.py",
          "size": 2035,
          "modified": "2025-07-09T18:34:55.813961",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_terminusdb_schema.py",
          "size": 2995,
          "modified": "2025-07-09T18:34:37.290005",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_terminusdb_schema.py",
          "size": 2995,
          "modified": "2025-07-09T18:34:37.290005",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_jwt_branch_creation.py",
          "size": 5015,
          "modified": "2025-07-09T18:33:26.442295",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_jwt_branch_creation.py",
          "size": 5015,
          "modified": "2025-07-09T18:33:26.442295",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_terminusdb_direct.py",
          "size": 2865,
          "modified": "2025-07-09T18:20:13.573961",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_terminusdb_direct.py",
          "size": 2865,
          "modified": "2025-07-09T18:20:13.573961",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_basic.py",
          "size": 7285,
          "modified": "2025-07-09T18:19:22.562700",
          "test_count": 3,
          "async_tests": 3,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_basic.py",
          "size": 7285,
          "modified": "2025-07-09T18:19:22.562700",
          "test_count": 3,
          "async_tests": 3,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "real_service_integration_test.py",
          "size": 13874,
          "modified": "2025-07-09T17:45:28.600548",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/test_key_loading.py",
          "size": 1369,
          "modified": "2025-07-08T20:25:00.941323",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/test_key_loading.py",
          "size": 1369,
          "modified": "2025-07-08T20:25:00.941323",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_schema_document_services.py",
          "size": 14467,
          "modified": "2025-07-08T18:42:16.323359",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_schema_document_services.py",
          "size": 14467,
          "modified": "2025-07-08T18:42:16.323359",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "simple_architecture_test.py",
          "size": 10591,
          "modified": "2025-07-08T16:46:01.620394",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "end_to_end_integration_test.py",
          "size": 15188,
          "modified": "2025-07-08T16:43:25.953416",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_jwks_implementation.py",
          "size": 9797,
          "modified": "2025-07-08T16:23:15.247328",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_jwks_implementation.py",
          "size": 9797,
          "modified": "2025-07-08T16:23:15.247328",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_branch_service.py",
          "size": 3745,
          "modified": "2025-07-08T15:59:49.863866",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_branch_service.py",
          "size": 3745,
          "modified": "2025-07-08T15:59:49.863866",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_integration_with_trailing_slash.py",
          "size": 15611,
          "modified": "2025-07-08T14:13:03.164130",
          "test_count": 5,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_integration_with_trailing_slash.py",
          "size": 15611,
          "modified": "2025-07-08T14:13:03.164130",
          "test_count": 5,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_middleware_debug.py",
          "size": 3107,
          "modified": "2025-07-07T19:20:20.404911",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_middleware_debug.py",
          "size": 3107,
          "modified": "2025-07-07T19:20:20.404911",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/core/integrations/test_iam_service_client.py",
          "size": 46058,
          "modified": "2025-07-07T13:35:32.014117",
          "test_count": 46,
          "async_tests": 40,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/integrations/test_iam_service_client.py",
          "size": 46058,
          "modified": "2025-07-07T13:35:32.014117",
          "test_count": 46,
          "async_tests": 40,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/integrations/test_iam_service_client_advanced.py",
          "size": 39726,
          "modified": "2025-07-06T11:06:31.951579",
          "test_count": 36,
          "async_tests": 30,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/integrations/test_iam_service_client_advanced.py",
          "size": 39726,
          "modified": "2025-07-06T11:06:31.951579",
          "test_count": 36,
          "async_tests": 30,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/middleware/test_auth_middleware_basic.py",
          "size": 16164,
          "modified": "2025-07-06T09:56:57.909647",
          "test_count": 17,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/middleware/test_auth_middleware_basic.py",
          "size": 16164,
          "modified": "2025-07-06T09:56:57.909647",
          "test_count": 17,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/middleware/test_auth_middleware.py",
          "size": 22242,
          "modified": "2025-07-06T09:55:41.037734",
          "test_count": 25,
          "async_tests": 14,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/middleware/test_auth_middleware.py",
          "size": 22242,
          "modified": "2025-07-06T09:55:41.037734",
          "test_count": 25,
          "async_tests": 14,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_integration.py",
          "size": 11347,
          "modified": "2025-07-06T09:28:48.261189",
          "test_count": 18,
          "async_tests": 18,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_integration.py",
          "size": 11347,
          "modified": "2025-07-06T09:28:48.261189",
          "test_count": 18,
          "async_tests": 18,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_security.py",
          "size": 13267,
          "modified": "2025-07-06T09:28:41.486932",
          "test_count": 25,
          "async_tests": 20,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_security.py",
          "size": 13267,
          "modified": "2025-07-06T09:28:41.486932",
          "test_count": 25,
          "async_tests": 20,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/test_auth_utils.py",
          "size": 10147,
          "modified": "2025-07-06T09:14:34.865943",
          "test_count": 20,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/core/test_auth_utils.py",
          "size": 10147,
          "modified": "2025-07-06T09:14:34.865943",
          "test_count": 20,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/tests/test_auth_service.py",
          "size": 17145,
          "modified": "2025-07-06T09:13:42.104917",
          "test_count": 25,
          "async_tests": 11,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_auth_service.py",
          "size": 17145,
          "modified": "2025-07-06T09:13:42.104917",
          "test_count": 25,
          "async_tests": 11,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_auth.py",
          "size": 12364,
          "modified": "2025-07-06T08:47:29.485878",
          "test_count": 17,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_auth.py",
          "size": 12364,
          "modified": "2025-07-06T08:47:29.485878",
          "test_count": 17,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "packages/backend/common_rate_limiting/tests/test_rate_limiting.py",
          "size": 13714,
          "modified": "2025-07-06T08:29:16.411329",
          "test_count": 17,
          "async_tests": 15,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "packages/backend/common_rate_limiting/tests/test_rate_limiting.py",
          "size": 13714,
          "modified": "2025-07-06T08:29:16.411329",
          "test_count": 17,
          "async_tests": 15,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_simple.py",
          "size": 7884,
          "modified": "2025-07-06T08:18:46.524795",
          "test_count": 13,
          "async_tests": 7,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_simple.py",
          "size": 7884,
          "modified": "2025-07-06T08:18:46.524795",
          "test_count": 13,
          "async_tests": 7,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_security_summary.py",
          "size": 4214,
          "modified": "2025-07-06T04:03:25.334594",
          "test_count": 10,
          "async_tests": 10,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_security_summary.py",
          "size": 4214,
          "modified": "2025-07-06T04:03:25.334594",
          "test_count": 10,
          "async_tests": 10,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_jwt.py",
          "size": 3015,
          "modified": "2025-07-06T03:47:35.445712",
          "test_count": 5,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/tests/test_jwt.py",
          "size": 3015,
          "modified": "2025-07-06T03:47:35.445712",
          "test_count": 5,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_integration.py",
          "size": 9671,
          "modified": "2025-07-04T21:53:25.054207",
          "test_count": 7,
          "async_tests": 7,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/test_integration.py",
          "size": 9671,
          "modified": "2025-07-04T21:53:25.054207",
          "test_count": 7,
          "async_tests": 7,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/test_full_stack.py",
          "size": 8653,
          "modified": "2025-07-04T21:53:25.052485",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/test_full_stack.py",
          "size": 8653,
          "modified": "2025-07-04T21:53:25.052485",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/test_full_integration.py",
          "size": 14490,
          "modified": "2025-07-04T21:53:24.995543",
          "test_count": 10,
          "async_tests": 10,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/test_full_integration.py",
          "size": 14490,
          "modified": "2025-07-04T21:53:24.995543",
          "test_count": 10,
          "async_tests": 10,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_user_oms_gateway_integration.py",
          "size": 6076,
          "modified": "2025-07-04T20:55:38.333281",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_user_oms_gateway_integration.py",
          "size": 6076,
          "modified": "2025-07-04T20:55:38.333281",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_time_travel_queries.py",
          "size": 14262,
          "modified": "2025-07-03T11:50:40.708987",
          "test_count": 12,
          "async_tests": 12,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_time_travel_queries.py",
          "size": 14262,
          "modified": "2025-07-03T11:50:40.708987",
          "test_count": 12,
          "async_tests": 12,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        }
      ]
    },
    "integration": {
      "count": 79,
      "files": [
        {
          "path": "test_msa_integration_final.py",
          "size": 17724,
          "modified": "2025-07-12T01:47:51.421525",
          "test_count": 11,
          "async_tests": 11,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_msa_integration_final.py",
          "size": 17724,
          "modified": "2025-07-12T01:47:51.421525",
          "test_count": 11,
          "async_tests": 11,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_middleware_comprehensive_integration.py",
          "size": 34535,
          "modified": "2025-07-11T23:47:36.221771",
          "test_count": 16,
          "async_tests": 16,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": true
        },
        {
          "path": "test_middleware_comprehensive_integration.py",
          "size": 34535,
          "modified": "2025-07-11T23:47:36.221771",
          "test_count": 16,
          "async_tests": 16,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": true
        },
        {
          "path": "test_pyroscope_integration.py",
          "size": 11093,
          "modified": "2025-07-11T23:08:55.043799",
          "test_count": 4,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_pyroscope_integration.py",
          "size": 11093,
          "modified": "2025-07-11T23:08:55.043799",
          "test_count": 4,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_enterprise_monitoring_simple.py",
          "size": 11309,
          "modified": "2025-07-11T23:01:50.060905",
          "test_count": 2,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_enterprise_monitoring_simple.py",
          "size": 11309,
          "modified": "2025-07-11T23:01:50.060905",
          "test_count": 2,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_enterprise_monitoring_complete.py",
          "size": 19400,
          "modified": "2025-07-11T23:00:50.662398",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_enterprise_monitoring_complete.py",
          "size": 19400,
          "modified": "2025-07-11T23:00:50.662398",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_enterprise_observability_integration.py",
          "size": 24144,
          "modified": "2025-07-11T22:44:57.110628",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_enterprise_observability_integration.py",
          "size": 24144,
          "modified": "2025-07-11T22:44:57.110628",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_three_service_resilience_integration.py",
          "size": 25813,
          "modified": "2025-07-11T21:15:10.654694",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_three_service_resilience_integration.py",
          "size": 25813,
          "modified": "2025-07-11T21:15:10.654694",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "comprehensive_integration_test.py",
          "size": 63610,
          "modified": "2025-07-11T18:29:39.292729",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_business_scenarios_fixed.py",
          "size": 17997,
          "modified": "2025-07-11T18:21:52.259046",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_business_scenarios_fixed.py",
          "size": 17997,
          "modified": "2025-07-11T18:21:52.259046",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_business_scenarios.py",
          "size": 30890,
          "modified": "2025-07-11T18:09:23.959844",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_business_scenarios.py",
          "size": 30890,
          "modified": "2025-07-11T18:09:23.959844",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_detailed_integration.py",
          "size": 30932,
          "modified": "2025-07-11T17:57:08.512082",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_detailed_integration.py",
          "size": 30932,
          "modified": "2025-07-11T17:57:08.512082",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_full_integration.py",
          "size": 12775,
          "modified": "2025-07-11T17:53:27.403830",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_full_integration.py",
          "size": 12775,
          "modified": "2025-07-11T17:53:27.403830",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_integration.py",
          "size": 10216,
          "modified": "2025-07-11T17:52:10.278493",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_integration.py",
          "size": 10216,
          "modified": "2025-07-11T17:52:10.278493",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_three_service_integration.py",
          "size": 15932,
          "modified": "2025-07-11T14:52:30.783002",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_three_service_integration.py",
          "size": 15932,
          "modified": "2025-07-11T14:52:30.783002",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_basic_integration.py",
          "size": 5607,
          "modified": "2025-07-09T18:45:38.126025",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_basic_integration.py",
          "size": 5607,
          "modified": "2025-07-09T18:45:38.126025",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_service_integration.py",
          "size": 16794,
          "modified": "2025-07-09T18:18:30.472806",
          "test_count": 3,
          "async_tests": 3,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_service_integration.py",
          "size": 16794,
          "modified": "2025-07-09T18:18:30.472806",
          "test_count": 3,
          "async_tests": 3,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/test_role_service.py",
          "size": 10514,
          "modified": "2025-07-08T15:37:11.739247",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/test_role_service.py",
          "size": 10514,
          "modified": "2025-07-08T15:37:11.739247",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_advanced_integration.py",
          "size": 23596,
          "modified": "2025-07-08T14:21:39.103117",
          "test_count": 12,
          "async_tests": 12,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_advanced_integration.py",
          "size": 23596,
          "modified": "2025-07-08T14:21:39.103117",
          "test_count": 12,
          "async_tests": 12,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_integration.py",
          "size": 6163,
          "modified": "2025-07-08T14:13:52.207505",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_integration.py",
          "size": 6163,
          "modified": "2025-07-08T14:13:52.207505",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/test_debug_app.py",
          "size": 1845,
          "modified": "2025-07-07T19:19:27.268784",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_debug_app.py",
          "size": 1845,
          "modified": "2025-07-07T19:19:27.268784",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/integration/test_api_integration.py",
          "size": 6438,
          "modified": "2025-07-07T14:20:25.666401",
          "test_count": 3,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/integration/test_api_integration.py",
          "size": 6438,
          "modified": "2025-07-07T14:20:25.666401",
          "test_count": 3,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/integration/test_database_routing.py",
          "size": 3693,
          "modified": "2025-07-07T02:34:46.044238",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_database_routing.py",
          "size": 3693,
          "modified": "2025-07-07T02:34:46.044238",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_async_merge.py",
          "size": 12467,
          "modified": "2025-07-07T00:48:03.342157",
          "test_count": 13,
          "async_tests": 13,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_async_merge.py",
          "size": 12467,
          "modified": "2025-07-07T00:48:03.342157",
          "test_count": 13,
          "async_tests": 13,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_integration.py",
          "size": 11110,
          "modified": "2025-07-06T08:19:07.119100",
          "test_count": 15,
          "async_tests": 15,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_integration.py",
          "size": 11110,
          "modified": "2025-07-06T08:19:07.119100",
          "test_count": 15,
          "async_tests": 15,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "packages/backend/common_logging/tests/test_logging.py",
          "size": 17999,
          "modified": "2025-07-06T08:03:30.152725",
          "test_count": 18,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "packages/backend/common_logging/tests/test_logging.py",
          "size": 17999,
          "modified": "2025-07-06T08:03:30.152725",
          "test_count": 18,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "packages/backend/common_security/tests/test_security.py",
          "size": 12106,
          "modified": "2025-07-06T08:02:25.925998",
          "test_count": 18,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "packages/backend/common_security/tests/test_security.py",
          "size": 12106,
          "modified": "2025-07-06T08:02:25.925998",
          "test_count": 18,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/tests/test_validators.py",
          "size": 25537,
          "modified": "2025-07-06T08:00:07.299323",
          "test_count": 46,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/tests/test_validators.py",
          "size": 25537,
          "modified": "2025-07-06T08:00:07.299323",
          "test_count": 46,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/integration/test_delta_encoding.py",
          "size": 13108,
          "modified": "2025-07-06T07:57:19.331175",
          "test_count": 12,
          "async_tests": 2,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_delta_encoding.py",
          "size": 13108,
          "modified": "2025-07-06T07:57:19.331175",
          "test_count": 12,
          "async_tests": 2,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_unfoldable_documents.py",
          "size": 16611,
          "modified": "2025-07-06T07:57:19.328663",
          "test_count": 17,
          "async_tests": 1,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_unfoldable_documents.py",
          "size": 16611,
          "modified": "2025-07-06T07:57:19.328663",
          "test_count": 17,
          "async_tests": 1,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_metadata_frames.py",
          "size": 19577,
          "modified": "2025-07-06T07:57:19.325936",
          "test_count": 20,
          "async_tests": 1,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_metadata_frames.py",
          "size": 19577,
          "modified": "2025-07-06T07:57:19.325936",
          "test_count": 20,
          "async_tests": 1,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_user_model.py",
          "size": 20072,
          "modified": "2025-07-06T07:48:50.328789",
          "test_count": 41,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/tests/test_user_model.py",
          "size": 20072,
          "modified": "2025-07-06T07:48:50.328789",
          "test_count": 41,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/integration/test_graph_analysis_tracing_cache.py",
          "size": 16272,
          "modified": "2025-07-06T05:09:26.760617",
          "test_count": 8,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_graph_analysis_tracing_cache.py",
          "size": 16272,
          "modified": "2025-07-06T05:09:26.760617",
          "test_count": 8,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/test_database_import.py",
          "size": 2291,
          "modified": "2025-07-04T23:17:44.249511",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_database_import.py",
          "size": 2291,
          "modified": "2025-07-04T23:17:44.249511",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/api/test_endpoints.py",
          "size": 10208,
          "modified": "2025-07-04T21:53:25.020917",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/api/test_endpoints.py",
          "size": 10208,
          "modified": "2025-07-04T21:53:25.020917",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/integration/test_real_nats_integration.py",
          "size": 6913,
          "modified": "2025-07-04T16:44:47.332695",
          "test_count": 8,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_real_nats_integration.py",
          "size": 6913,
          "modified": "2025-07-04T16:44:47.332695",
          "test_count": 8,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_end_to_end_workflow.py",
          "size": 10881,
          "modified": "2025-07-04T16:41:29.955123",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_end_to_end_workflow.py",
          "size": 10881,
          "modified": "2025-07-04T16:41:29.955123",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_full_api_integration.py",
          "size": 9250,
          "modified": "2025-07-04T16:41:11.976645",
          "test_count": 11,
          "async_tests": 11,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_full_api_integration.py",
          "size": 9250,
          "modified": "2025-07-04T16:41:11.976645",
          "test_count": 11,
          "async_tests": 11,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_nats_event_flow.py",
          "size": 12562,
          "modified": "2025-07-04T16:25:29.090982",
          "test_count": 9,
          "async_tests": 9,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/integration/test_nats_event_flow.py",
          "size": 12562,
          "modified": "2025-07-04T16:25:29.090982",
          "test_count": 9,
          "async_tests": 9,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/utils/full_stack_test.py",
          "size": 25083,
          "modified": "2025-07-03T15:01:39.274547",
          "test_count": 10,
          "async_tests": 10,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/utils/integration_test.py",
          "size": 16358,
          "modified": "2025-07-03T14:50:35.620590",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/test_mtls_fallback_integration.py",
          "size": 15875,
          "modified": "2025-07-03T00:18:13.187955",
          "test_count": 9,
          "async_tests": 9,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/test_mtls_fallback_integration.py",
          "size": 15875,
          "modified": "2025-07-03T00:18:13.187955",
          "test_count": 9,
          "async_tests": 9,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        }
      ]
    },
    "circuit_breaker": {
      "count": 16,
      "files": [
        {
          "path": "test_global_circuit_simple.py",
          "size": 13717,
          "modified": "2025-07-11T21:59:56.411041",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_global_circuit_simple.py",
          "size": 13717,
          "modified": "2025-07-11T21:59:56.411041",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_oms_resilience_activated.py",
          "size": 14689,
          "modified": "2025-07-11T20:10:10.059667",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_oms_resilience_activated.py",
          "size": 14689,
          "modified": "2025-07-11T20:10:10.059667",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_oms_resilience.py",
          "size": 22059,
          "modified": "2025-07-11T19:15:39.863671",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_oms_resilience.py",
          "size": 22059,
          "modified": "2025-07-11T19:15:39.863671",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_resilience.py",
          "size": 8735,
          "modified": "2025-07-11T18:54:51.621558",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_audit_resilience.py",
          "size": 8735,
          "modified": "2025-07-11T18:54:51.621558",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_circuit_breaker.py",
          "size": 12410,
          "modified": "2025-07-11T18:53:44.116910",
          "test_count": 2,
          "async_tests": 2,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_circuit_breaker.py",
          "size": 12410,
          "modified": "2025-07-11T18:53:44.116910",
          "test_count": 2,
          "async_tests": 2,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_bulkhead.py",
          "size": 13606,
          "modified": "2025-07-06T09:27:38.078356",
          "test_count": 22,
          "async_tests": 17,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_bulkhead.py",
          "size": 13606,
          "modified": "2025-07-06T09:27:38.078356",
          "test_count": 22,
          "async_tests": 17,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_circuit_breaker.py",
          "size": 14295,
          "modified": "2025-07-06T09:22:51.015987",
          "test_count": 20,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_circuit_breaker.py",
          "size": 14295,
          "modified": "2025-07-06T09:22:51.015987",
          "test_count": 20,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/test_unified_http_client.py",
          "size": 14825,
          "modified": "2025-07-03T00:16:53.136391",
          "test_count": 17,
          "async_tests": 17,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/test_unified_http_client.py",
          "size": 14825,
          "modified": "2025-07-03T00:16:53.136391",
          "test_count": 17,
          "async_tests": 17,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        }
      ]
    },
    "business": {
      "count": 6,
      "files": [
        {
          "path": "test_extreme_failure_scenarios.py",
          "size": 20578,
          "modified": "2025-07-11T21:17:03.172336",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_extreme_failure_scenarios.py",
          "size": 20578,
          "modified": "2025-07-11T21:17:03.172336",
          "test_count": 4,
          "async_tests": 4,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/branch/test_branch_service.py",
          "size": 36835,
          "modified": "2025-07-07T00:24:42.622862",
          "test_count": 37,
          "async_tests": 32,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/branch/test_branch_service.py",
          "size": 36835,
          "modified": "2025-07-07T00:24:42.622862",
          "test_count": 37,
          "async_tests": 32,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/branch/test_branch_service_basic.py",
          "size": 15738,
          "modified": "2025-07-06T09:41:08.519878",
          "test_count": 16,
          "async_tests": 11,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/branch/test_branch_service_basic.py",
          "size": 15738,
          "modified": "2025-07-06T09:41:08.519878",
          "test_count": 16,
          "async_tests": 11,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        }
      ]
    },
    "middleware": {
      "count": 14,
      "files": [
        {
          "path": "test_middleware_improvements.py",
          "size": 7446,
          "modified": "2025-07-12T00:33:07.502747",
          "test_count": 2,
          "async_tests": 2,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_middleware_improvements.py",
          "size": 7446,
          "modified": "2025-07-12T00:33:07.502747",
          "test_count": 2,
          "async_tests": 2,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_middleware_dependency_simple.py",
          "size": 16453,
          "modified": "2025-07-12T00:15:03.983052",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_middleware_dependency_simple.py",
          "size": 16453,
          "modified": "2025-07-12T00:15:03.983052",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_middleware_dependency_order.py",
          "size": 16457,
          "modified": "2025-07-12T00:09:49.175518",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_middleware_dependency_order.py",
          "size": 16457,
          "modified": "2025-07-12T00:09:49.175518",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_middleware_static_verification.py",
          "size": 13267,
          "modified": "2025-07-11T23:59:56.343349",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_middleware_static_verification.py",
          "size": 13267,
          "modified": "2025-07-11T23:59:56.343349",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_all_middleware_activation.py",
          "size": 10372,
          "modified": "2025-07-11T23:31:21.158808",
          "test_count": 4,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_all_middleware_activation.py",
          "size": 10372,
          "modified": "2025-07-11T23:31:21.158808",
          "test_count": 4,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_minimal_main.py",
          "size": 566,
          "modified": "2025-07-07T19:18:59.605054",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_minimal_main.py",
          "size": 566,
          "modified": "2025-07-07T19:18:59.605054",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/tests/test_rate_limit.py",
          "size": 15684,
          "modified": "2025-07-06T08:54:11.254936",
          "test_count": 22,
          "async_tests": 19,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_rate_limit.py",
          "size": 15684,
          "modified": "2025-07-06T08:54:11.254936",
          "test_count": 22,
          "async_tests": 19,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        }
      ]
    },
    "schema_db": {
      "count": 27,
      "files": [
        {
          "path": "test_branch_audit.py",
          "size": 5639,
          "modified": "2025-07-09T18:31:44.607457",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_branch_audit.py",
          "size": 5639,
          "modified": "2025-07-09T18:31:44.607457",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/test_schema_service.py",
          "size": 4380,
          "modified": "2025-07-07T13:41:12.844789",
          "test_count": 2,
          "async_tests": 2,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/test_schema_service.py",
          "size": 4380,
          "modified": "2025-07-07T13:41:12.844789",
          "test_count": 2,
          "async_tests": 2,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/test_schema_repository.py",
          "size": 3552,
          "modified": "2025-07-07T13:38:55.717439",
          "test_count": 3,
          "async_tests": 3,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/test_schema_repository.py",
          "size": 3552,
          "modified": "2025-07-07T13:38:55.717439",
          "test_count": 3,
          "async_tests": 3,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/schema/test_conflict_resolver.py",
          "size": 25729,
          "modified": "2025-07-06T10:53:17.502651",
          "test_count": 28,
          "async_tests": 18,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/schema/test_conflict_resolver.py",
          "size": 25729,
          "modified": "2025-07-06T10:53:17.502651",
          "test_count": 28,
          "async_tests": 18,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/versioning/test_merge_engine.py",
          "size": 33466,
          "modified": "2025-07-06T10:38:40.930395",
          "test_count": 38,
          "async_tests": 27,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/versioning/test_merge_engine.py",
          "size": 33466,
          "modified": "2025-07-06T10:38:40.930395",
          "test_count": 38,
          "async_tests": 27,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py",
          "size": 28896,
          "modified": "2025-07-06T10:17:20.660974",
          "test_count": 25,
          "async_tests": 20,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py",
          "size": 28896,
          "modified": "2025-07-06T10:17:20.660974",
          "test_count": 25,
          "async_tests": 20,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive.py",
          "size": 56422,
          "modified": "2025-07-06T10:12:55.888812",
          "test_count": 23,
          "async_tests": 20,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive.py",
          "size": 56422,
          "modified": "2025-07-06T10:12:55.888812",
          "test_count": 23,
          "async_tests": 20,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/validation/test_validation_service.py",
          "size": 37722,
          "modified": "2025-07-06T10:08:03.007623",
          "test_count": 12,
          "async_tests": 9,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/validation/test_validation_service.py",
          "size": 37722,
          "modified": "2025-07-06T10:08:03.007623",
          "test_count": 12,
          "async_tests": 9,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py",
          "size": 19771,
          "modified": "2025-07-06T10:02:13.192594",
          "test_count": 24,
          "async_tests": 18,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py",
          "size": 19771,
          "modified": "2025-07-06T10:02:13.192594",
          "test_count": 24,
          "async_tests": 18,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/database/clients/test_terminus_db_fixed.py",
          "size": 20584,
          "modified": "2025-07-06T10:00:52.858377",
          "test_count": 23,
          "async_tests": 21,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/database/clients/test_terminus_db_fixed.py",
          "size": 20584,
          "modified": "2025-07-06T10:00:52.858377",
          "test_count": 23,
          "async_tests": 21,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/database/clients/test_terminus_db_basic.py",
          "size": 18988,
          "modified": "2025-07-06T09:48:47.083727",
          "test_count": 25,
          "async_tests": 21,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/database/clients/test_terminus_db_basic.py",
          "size": 18988,
          "modified": "2025-07-06T09:48:47.083727",
          "test_count": 25,
          "async_tests": 21,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/database/clients/test_terminus_db.py",
          "size": 20963,
          "modified": "2025-07-06T09:46:50.410597",
          "test_count": 26,
          "async_tests": 23,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/database/clients/test_terminus_db.py",
          "size": 20963,
          "modified": "2025-07-06T09:46:50.410597",
          "test_count": 26,
          "async_tests": 23,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/schema/test_schema_service.py",
          "size": 17548,
          "modified": "2025-07-06T09:44:31.977516",
          "test_count": 18,
          "async_tests": 16,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/schema/test_schema_service.py",
          "size": 17548,
          "modified": "2025-07-06T09:44:31.977516",
          "test_count": 18,
          "async_tests": 16,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/utils/simple_test.py",
          "size": 10374,
          "modified": "2025-07-06T05:08:26.927349",
          "test_count": 9,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        }
      ]
    },
    "monitoring": {
      "count": 6,
      "files": [
        {
          "path": "test_alerting_system.py",
          "size": 11719,
          "modified": "2025-07-12T03:53:07.576688",
          "test_count": 4,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": true
        },
        {
          "path": "test_alerting_system.py",
          "size": 11719,
          "modified": "2025-07-12T03:53:07.576688",
          "test_count": 4,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_retry_execution.py",
          "size": 18478,
          "modified": "2025-07-06T09:32:37.111768",
          "test_count": 27,
          "async_tests": 10,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_retry_execution.py",
          "size": 18478,
          "modified": "2025-07-06T09:32:37.111768",
          "test_count": 27,
          "async_tests": 10,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_retry_budget.py",
          "size": 13237,
          "modified": "2025-07-06T09:26:20.003105",
          "test_count": 20,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_retry_budget.py",
          "size": 13237,
          "modified": "2025-07-06T09:26:20.003105",
          "test_count": 20,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        }
      ]
    },
    "audit": {
      "count": 18,
      "files": [
        {
          "path": "test_audit_key.py",
          "size": 1816,
          "modified": "2025-07-09T19:12:28.907779",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_audit_key.py",
          "size": 1816,
          "modified": "2025-07-09T19:12:28.907779",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "simple_audit_test.py",
          "size": 3741,
          "modified": "2025-07-09T18:32:22.606277",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": true,
          "is_async": false
        },
        {
          "path": "run_final_test.py",
          "size": 8074,
          "modified": "2025-07-08T14:13:52.207172",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_services.py",
          "size": 2005,
          "modified": "2025-07-08T14:13:03.164440",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_services.py",
          "size": 2005,
          "modified": "2025-07-08T14:13:03.164440",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_env_patch.py",
          "size": 851,
          "modified": "2025-07-06T08:22:00.098969",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "audit-service/tests/test_env_patch.py",
          "size": 851,
          "modified": "2025-07-06T08:22:00.098969",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "audit-service/tests/test_core_functionality_fixed.py",
          "size": 16362,
          "modified": "2025-07-06T08:19:29.381282",
          "test_count": 21,
          "async_tests": 15,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_core_functionality_fixed.py",
          "size": 16362,
          "modified": "2025-07-06T08:19:29.381282",
          "test_count": 21,
          "async_tests": 15,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_core_functionality.py",
          "size": 16327,
          "modified": "2025-07-06T08:19:24.578332",
          "test_count": 15,
          "async_tests": 12,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_core_functionality.py",
          "size": 16327,
          "modified": "2025-07-06T08:19:24.578332",
          "test_count": 15,
          "async_tests": 12,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_maximum_coverage.py",
          "size": 18792,
          "modified": "2025-07-06T07:51:43.337325",
          "test_count": 9,
          "async_tests": 3,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_maximum_coverage.py",
          "size": 18792,
          "modified": "2025-07-06T07:51:43.337325",
          "test_count": 9,
          "async_tests": 3,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_real_implementation.py",
          "size": 23499,
          "modified": "2025-07-06T07:33:45.220959",
          "test_count": 17,
          "async_tests": 17,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_real_implementation.py",
          "size": 23499,
          "modified": "2025-07-06T07:33:45.220959",
          "test_count": 17,
          "async_tests": 17,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_additional_coverage.py",
          "size": 17628,
          "modified": "2025-07-06T07:29:22.176540",
          "test_count": 25,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_additional_coverage.py",
          "size": 17628,
          "modified": "2025-07-06T07:29:22.176540",
          "test_count": 25,
          "async_tests": 8,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        }
      ]
    },
    "etag": {
      "count": 2,
      "files": [
        {
          "path": "ontology-management-service/tests/unit/core/versioning/test_delta_compression.py",
          "size": 20889,
          "modified": "2025-07-06T10:54:55.425953",
          "test_count": 35,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/core/versioning/test_delta_compression.py",
          "size": 20889,
          "modified": "2025-07-06T10:54:55.425953",
          "test_count": 35,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        }
      ]
    },
    "misc": {
      "count": 59,
      "files": [
        {
          "path": "user-service/test_env/lib/python3.9/site-packages/pip/_vendor/webencodings/tests.py",
          "size": 6563,
          "modified": "2025-07-12T05:17:37.275121",
          "test_count": 8,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/test_env/lib/python3.9/site-packages/setuptools/command/test.py",
          "size": 8088,
          "modified": "2025-07-12T05:17:37.054966",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "unittest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_microservices_locally.py",
          "size": 3668,
          "modified": "2025-07-12T04:36:18.973592",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_microservices_locally.py",
          "size": 3668,
          "modified": "2025-07-12T04:36:18.973592",
          "test_count": 1,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "production_stress_test.py",
          "size": 16971,
          "modified": "2025-07-12T03:23:45.613081",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_core_modules_health.py",
          "size": 11225,
          "modified": "2025-07-12T00:45:12.823121",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "test_core_modules_health.py",
          "size": 11225,
          "modified": "2025-07-12T00:45:12.823121",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/test_role_service_transaction_isolated.py",
          "size": 12649,
          "modified": "2025-07-08T16:21:36.163346",
          "test_count": 3,
          "async_tests": 3,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/test_role_service_transaction_isolated.py",
          "size": 12649,
          "modified": "2025-07-08T16:21:36.163346",
          "test_count": 3,
          "async_tests": 3,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/test_role_service_fixed.py",
          "size": 14307,
          "modified": "2025-07-08T16:16:32.661164",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/test_role_service_fixed.py",
          "size": 14307,
          "modified": "2025-07-08T16:16:32.661164",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_trailing_slash_redirect.py",
          "size": 2269,
          "modified": "2025-07-08T14:13:03.164548",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "test_trailing_slash_redirect.py",
          "size": 2269,
          "modified": "2025-07-08T14:13:03.164548",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "simple_test.py",
          "size": 3129,
          "modified": "2025-07-08T14:13:03.163364",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/simple_test.py",
          "size": 221,
          "modified": "2025-07-08T14:13:03.162864",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_simple_factory.py",
          "size": 976,
          "modified": "2025-07-07T19:18:25.430039",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_simple_factory.py",
          "size": 976,
          "modified": "2025-07-07T19:18:25.430039",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_minimal.py",
          "size": 591,
          "modified": "2025-07-07T19:15:46.848881",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/test_minimal.py",
          "size": 591,
          "modified": "2025-07-07T19:15:46.848881",
          "test_count": 0,
          "async_tests": 0,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/models/test_domain.py",
          "size": 7084,
          "modified": "2025-07-07T13:35:32.014410",
          "test_count": 17,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/models/test_domain.py",
          "size": 7084,
          "modified": "2025-07-07T13:35:32.014410",
          "test_count": 17,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service_advanced.py",
          "size": 36913,
          "modified": "2025-07-06T11:03:48.651803",
          "test_count": 35,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service_advanced.py",
          "size": 36913,
          "modified": "2025-07-06T11:03:48.651803",
          "test_count": 35,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/validation/test_tampering_detection.py",
          "size": 34609,
          "modified": "2025-07-06T11:01:06.027753",
          "test_count": 32,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/validation/test_tampering_detection.py",
          "size": 34609,
          "modified": "2025-07-06T11:01:06.027753",
          "test_count": 32,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/validation/test_input_sanitization.py",
          "size": 27458,
          "modified": "2025-07-06T10:58:48.954816",
          "test_count": 43,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/core/validation/test_input_sanitization.py",
          "size": 27458,
          "modified": "2025-07-06T10:58:48.954816",
          "test_count": 43,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "ontology-management-service/tests/unit/core/versioning/test_merge_engine_advanced.py",
          "size": 28329,
          "modified": "2025-07-06T10:56:43.134545",
          "test_count": 26,
          "async_tests": 5,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/versioning/test_merge_engine_advanced.py",
          "size": 28329,
          "modified": "2025-07-06T10:56:43.134545",
          "test_count": 26,
          "async_tests": 5,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/graph/test_graph_repositories.py",
          "size": 58358,
          "modified": "2025-07-06T10:31:15.888569",
          "test_count": 34,
          "async_tests": 19,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/graph/test_graph_repositories.py",
          "size": 58358,
          "modified": "2025-07-06T10:31:15.888569",
          "test_count": 34,
          "async_tests": 19,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service.py",
          "size": 76392,
          "modified": "2025-07-06T10:23:52.425077",
          "test_count": 28,
          "async_tests": 26,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service.py",
          "size": 76392,
          "modified": "2025-07-06T10:23:52.425077",
          "test_count": 28,
          "async_tests": 26,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_e2e.py",
          "size": 8784,
          "modified": "2025-07-06T09:28:44.948531",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_e2e.py",
          "size": 8784,
          "modified": "2025-07-06T09:28:44.948531",
          "test_count": 5,
          "async_tests": 5,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_retry_config.py",
          "size": 12262,
          "modified": "2025-07-06T09:20:16.501787",
          "test_count": 23,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/utils/test_retry_config.py",
          "size": 12262,
          "modified": "2025-07-06T09:20:16.501787",
          "test_count": 23,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/validation/test_service.py",
          "size": 12475,
          "modified": "2025-07-06T09:12:53.954150",
          "test_count": 17,
          "async_tests": 14,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/unit/core/validation/test_service.py",
          "size": 12475,
          "modified": "2025-07-06T09:12:53.954150",
          "test_count": 17,
          "async_tests": 14,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_oms_subscriber_coverage.py",
          "size": 30484,
          "modified": "2025-07-06T08:54:26.436092",
          "test_count": 26,
          "async_tests": 22,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_oms_subscriber_coverage.py",
          "size": 30484,
          "modified": "2025-07-06T08:54:26.436092",
          "test_count": 26,
          "async_tests": 22,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_missing_coverage.py",
          "size": 32913,
          "modified": "2025-07-06T08:48:14.980211",
          "test_count": 37,
          "async_tests": 31,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_missing_coverage.py",
          "size": 32913,
          "modified": "2025-07-06T08:48:14.980211",
          "test_count": 37,
          "async_tests": 31,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_coverage_boost.py",
          "size": 33923,
          "modified": "2025-07-06T08:45:30.438900",
          "test_count": 40,
          "async_tests": 21,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_coverage_boost.py",
          "size": 33923,
          "modified": "2025-07-06T08:45:30.438900",
          "test_count": 40,
          "async_tests": 21,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_mfa_service.py",
          "size": 20190,
          "modified": "2025-07-06T08:28:39.712041",
          "test_count": 38,
          "async_tests": 27,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_mfa_service.py",
          "size": 20190,
          "modified": "2025-07-06T08:28:39.712041",
          "test_count": 38,
          "async_tests": 27,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_final_coverage_push.py",
          "size": 17806,
          "modified": "2025-07-06T07:50:24.978243",
          "test_count": 26,
          "async_tests": 16,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_final_coverage_push.py",
          "size": 17806,
          "modified": "2025-07-06T07:50:24.978243",
          "test_count": 26,
          "async_tests": 16,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_intensive_coverage.py",
          "size": 72855,
          "modified": "2025-07-06T07:47:12.415834",
          "test_count": 49,
          "async_tests": 39,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "audit-service/tests/test_intensive_coverage.py",
          "size": 72855,
          "modified": "2025-07-06T07:47:12.415834",
          "test_count": 49,
          "async_tests": 39,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_user_service.py",
          "size": 26771,
          "modified": "2025-07-06T07:28:27.188960",
          "test_count": 33,
          "async_tests": 26,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_user_service.py",
          "size": 26771,
          "modified": "2025-07-06T07:28:27.188960",
          "test_count": 33,
          "async_tests": 26,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/tests/test_password_security.py",
          "size": 3248,
          "modified": "2025-07-06T03:48:13.697529",
          "test_count": 5,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/tests/test_password_security.py",
          "size": 3248,
          "modified": "2025-07-06T03:48:13.697529",
          "test_count": 5,
          "async_tests": 0,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": false
        },
        {
          "path": "user-service/src/test_user_creation.py",
          "size": 1691,
          "modified": "2025-07-04T15:14:18.456316",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "user-service/src/test_user_creation.py",
          "size": 1691,
          "modified": "2025-07-04T15:14:18.456316",
          "test_count": 1,
          "async_tests": 1,
          "test_framework": "custom",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/test_streaming_performance.py",
          "size": 15173,
          "modified": "2025-07-03T00:19:24.387593",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        },
        {
          "path": "ontology-management-service/tests/test_streaming_performance.py",
          "size": 15173,
          "modified": "2025-07-03T00:19:24.387593",
          "test_count": 6,
          "async_tests": 6,
          "test_framework": "pytest",
          "is_integration": false,
          "is_async": true
        }
      ]
    }
  },
  "duplicates": [
    {
      "files": [
        "test_cleanup_analysis.py",
        "test_cleanup_analysis.py"
      ],
      "recommendation": "Keep test_cleanup_analysis.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_microservices_locally.py",
        "ontology-management-service/test_microservices_locally.py"
      ],
      "recommendation": "Keep test_microservices_locally.py, archive others"
    },
    {
      "files": [
        "test_alerting_system.py",
        "test_alerting_system.py"
      ],
      "recommendation": "Keep test_alerting_system.py, archive others"
    },
    {
      "files": [
        "test_jwt_integration_proof.py",
        "test_jwt_integration_proof.py"
      ],
      "recommendation": "Keep test_jwt_integration_proof.py, archive others"
    },
    {
      "files": [
        "test_real_services_integration.py",
        "test_real_services_integration.py"
      ],
      "recommendation": "Keep test_real_services_integration.py, archive others"
    },
    {
      "files": [
        "test_msa_integration_final.py",
        "test_msa_integration_final.py"
      ],
      "recommendation": "Keep test_msa_integration_final.py, archive others"
    },
    {
      "files": [
        "test_msa_integration_complete.py",
        "test_msa_integration_complete.py"
      ],
      "recommendation": "Keep test_msa_integration_complete.py, archive others"
    },
    {
      "files": [
        "test_core_modules_health.py",
        "test_core_modules_health.py"
      ],
      "recommendation": "Keep test_core_modules_health.py, archive others"
    },
    {
      "files": [
        "test_middleware_improvements.py",
        "test_middleware_improvements.py"
      ],
      "recommendation": "Keep test_middleware_improvements.py, archive others"
    },
    {
      "files": [
        "test_middleware_dependency_simple.py",
        "test_middleware_dependency_simple.py"
      ],
      "recommendation": "Keep test_middleware_dependency_simple.py, archive others"
    },
    {
      "files": [
        "test_middleware_dependency_order.py",
        "test_middleware_dependency_order.py"
      ],
      "recommendation": "Keep test_middleware_dependency_order.py, archive others"
    },
    {
      "files": [
        "test_middleware_static_verification.py",
        "test_middleware_static_verification.py"
      ],
      "recommendation": "Keep test_middleware_static_verification.py, archive others"
    },
    {
      "files": [
        "test_middleware_comprehensive_integration.py",
        "test_middleware_comprehensive_integration.py"
      ],
      "recommendation": "Keep test_middleware_comprehensive_integration.py, archive others"
    },
    {
      "files": [
        "test_all_middleware_activation.py",
        "test_all_middleware_activation.py"
      ],
      "recommendation": "Keep test_all_middleware_activation.py, archive others"
    },
    {
      "files": [
        "test_pyroscope_integration.py",
        "test_pyroscope_integration.py"
      ],
      "recommendation": "Keep test_pyroscope_integration.py, archive others"
    },
    {
      "files": [
        "test_enterprise_monitoring_simple.py",
        "test_enterprise_monitoring_simple.py"
      ],
      "recommendation": "Keep test_enterprise_monitoring_simple.py, archive others"
    },
    {
      "files": [
        "test_enterprise_monitoring_complete.py",
        "test_enterprise_monitoring_complete.py"
      ],
      "recommendation": "Keep test_enterprise_monitoring_complete.py, archive others"
    },
    {
      "files": [
        "test_enterprise_observability_integration.py",
        "test_enterprise_observability_integration.py"
      ],
      "recommendation": "Keep test_enterprise_observability_integration.py, archive others"
    },
    {
      "files": [
        "test_resilience_dashboard.py",
        "test_resilience_dashboard.py"
      ],
      "recommendation": "Keep test_resilience_dashboard.py, archive others"
    },
    {
      "files": [
        "test_adaptive_etag_caching.py",
        "test_adaptive_etag_caching.py"
      ],
      "recommendation": "Keep test_adaptive_etag_caching.py, archive others"
    },
    {
      "files": [
        "test_distributed_circuit_breaker.py",
        "test_distributed_circuit_breaker.py"
      ],
      "recommendation": "Keep test_distributed_circuit_breaker.py, archive others"
    },
    {
      "files": [
        "test_circuit_with_server_errors.py",
        "test_circuit_with_server_errors.py"
      ],
      "recommendation": "Keep test_circuit_with_server_errors.py, archive others"
    },
    {
      "files": [
        "test_global_circuit_simple.py",
        "test_global_circuit_simple.py"
      ],
      "recommendation": "Keep test_global_circuit_simple.py, archive others"
    },
    {
      "files": [
        "test_global_circuit_breaker.py",
        "test_global_circuit_breaker.py"
      ],
      "recommendation": "Keep test_global_circuit_breaker.py, archive others"
    },
    {
      "files": [
        "test_etag_comprehensive.py",
        "test_etag_comprehensive.py"
      ],
      "recommendation": "Keep test_etag_comprehensive.py, archive others"
    },
    {
      "files": [
        "test_extreme_failure_scenarios.py",
        "test_extreme_failure_scenarios.py"
      ],
      "recommendation": "Keep test_extreme_failure_scenarios.py, archive others"
    },
    {
      "files": [
        "test_three_service_resilience_integration.py",
        "test_three_service_resilience_integration.py"
      ],
      "recommendation": "Keep test_three_service_resilience_integration.py, archive others"
    },
    {
      "files": [
        "test_circuit_breaker_specific.py",
        "test_circuit_breaker_specific.py"
      ],
      "recommendation": "Keep test_circuit_breaker_specific.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/api/v1/test_routes.py",
        "ontology-management-service/api/v1/test_routes.py"
      ],
      "recommendation": "Keep test_routes.py, archive others"
    },
    {
      "files": [
        "test_oms_resilience_final.py",
        "test_oms_resilience_final.py"
      ],
      "recommendation": "Keep test_oms_resilience_final.py, archive others"
    },
    {
      "files": [
        "test_oms_resilience_activated.py",
        "test_oms_resilience_activated.py"
      ],
      "recommendation": "Keep test_oms_resilience_activated.py, archive others"
    },
    {
      "files": [
        "test_oms_resilience.py",
        "test_oms_resilience.py"
      ],
      "recommendation": "Keep test_oms_resilience.py, archive others"
    },
    {
      "files": [
        "test_audit_resilience.py",
        "test_audit_resilience.py"
      ],
      "recommendation": "Keep test_audit_resilience.py, archive others"
    },
    {
      "files": [
        "test_circuit_breaker.py",
        "test_circuit_breaker.py"
      ],
      "recommendation": "Keep test_circuit_breaker.py, archive others"
    },
    {
      "files": [
        "test_business_scenarios_fixed.py",
        "test_business_scenarios_fixed.py"
      ],
      "recommendation": "Keep test_business_scenarios_fixed.py, archive others"
    },
    {
      "files": [
        "test_business_scenarios.py",
        "test_business_scenarios.py"
      ],
      "recommendation": "Keep test_business_scenarios.py, archive others"
    },
    {
      "files": [
        "test_detailed_integration.py",
        "test_detailed_integration.py"
      ],
      "recommendation": "Keep test_detailed_integration.py, archive others"
    },
    {
      "files": [
        "test_full_integration.py",
        "test_full_integration.py"
      ],
      "recommendation": "Keep test_full_integration.py, archive others"
    },
    {
      "files": [
        "test_integration.py",
        "test_integration.py"
      ],
      "recommendation": "Keep test_integration.py, archive others"
    },
    {
      "files": [
        "test_container_integration.py",
        "test_container_integration.py"
      ],
      "recommendation": "Keep test_container_integration.py, archive others"
    },
    {
      "files": [
        "test_jwt_decode.py",
        "test_jwt_decode.py"
      ],
      "recommendation": "Keep test_jwt_decode.py, archive others"
    },
    {
      "files": [
        "test_jwt_in_container.py",
        "test_jwt_in_container.py"
      ],
      "recommendation": "Keep test_jwt_in_container.py, archive others"
    },
    {
      "files": [
        "test_audit_jwt.py",
        "test_audit_jwt.py"
      ],
      "recommendation": "Keep test_audit_jwt.py, archive others"
    },
    {
      "files": [
        "test_login_only.py",
        "test_login_only.py"
      ],
      "recommendation": "Keep test_login_only.py, archive others"
    },
    {
      "files": [
        "test_three_service_integration.py",
        "test_three_service_integration.py"
      ],
      "recommendation": "Keep test_three_service_integration.py, archive others"
    },
    {
      "files": [
        "test_audit_jwt_local.py",
        "test_audit_jwt_local.py"
      ],
      "recommendation": "Keep test_audit_jwt_local.py, archive others"
    },
    {
      "files": [
        "test_audit_jwt_config.py",
        "test_audit_jwt_config.py"
      ],
      "recommendation": "Keep test_audit_jwt_config.py, archive others"
    },
    {
      "files": [
        "test_service_token_only.py",
        "test_service_token_only.py"
      ],
      "recommendation": "Keep test_service_token_only.py, archive others"
    },
    {
      "files": [
        "test_jwt_auth_simple.py",
        "test_jwt_auth_simple.py"
      ],
      "recommendation": "Keep test_jwt_auth_simple.py, archive others"
    },
    {
      "files": [
        "test_jwt_auth_complete.py",
        "test_jwt_auth_complete.py"
      ],
      "recommendation": "Keep test_jwt_auth_complete.py, archive others"
    },
    {
      "files": [
        "audit-service/test_env_loading.py",
        "audit-service/test_env_loading.py"
      ],
      "recommendation": "Keep test_env_loading.py, archive others"
    },
    {
      "files": [
        "user-service/test_jwt_auth_fix.py",
        "user-service/test_jwt_auth_fix.py"
      ],
      "recommendation": "Keep test_jwt_auth_fix.py, archive others"
    },
    {
      "files": [
        "test_direct_validation.py",
        "test_direct_validation.py"
      ],
      "recommendation": "Keep test_direct_validation.py, archive others"
    },
    {
      "files": [
        "test_token_debug.py",
        "test_token_debug.py"
      ],
      "recommendation": "Keep test_token_debug.py, archive others"
    },
    {
      "files": [
        "test_audit_auth.py",
        "test_audit_auth.py"
      ],
      "recommendation": "Keep test_audit_auth.py, archive others"
    },
    {
      "files": [
        "test_jwt_validation2.py",
        "test_jwt_validation2.py"
      ],
      "recommendation": "Keep test_jwt_validation2.py, archive others"
    },
    {
      "files": [
        "test_jwt_validation.py",
        "test_jwt_validation.py"
      ],
      "recommendation": "Keep test_jwt_validation.py, archive others"
    },
    {
      "files": [
        "test_immediate_audit.py",
        "test_immediate_audit.py"
      ],
      "recommendation": "Keep test_immediate_audit.py, archive others"
    },
    {
      "files": [
        "test_audit_key.py",
        "test_audit_key.py"
      ],
      "recommendation": "Keep test_audit_key.py, archive others"
    },
    {
      "files": [
        "test_audit_with_service_token.py",
        "test_audit_with_service_token.py"
      ],
      "recommendation": "Keep test_audit_with_service_token.py, archive others"
    },
    {
      "files": [
        "test_complete_flow.py",
        "test_complete_flow.py"
      ],
      "recommendation": "Keep test_complete_flow.py, archive others"
    },
    {
      "files": [
        "test_oms_audit_integration.py",
        "test_oms_audit_integration.py"
      ],
      "recommendation": "Keep test_oms_audit_integration.py, archive others"
    },
    {
      "files": [
        "test_decode_service_token.py",
        "test_decode_service_token.py"
      ],
      "recommendation": "Keep test_decode_service_token.py, archive others"
    },
    {
      "files": [
        "test_token_exchange_detailed.py",
        "test_token_exchange_detailed.py"
      ],
      "recommendation": "Keep test_token_exchange_detailed.py, archive others"
    },
    {
      "files": [
        "test_comprehensive_integration.py",
        "test_comprehensive_integration.py"
      ],
      "recommendation": "Keep test_comprehensive_integration.py, archive others"
    },
    {
      "files": [
        "test_token_exchange.py",
        "test_token_exchange.py"
      ],
      "recommendation": "Keep test_token_exchange.py, archive others"
    },
    {
      "files": [
        "test_basic_integration.py",
        "test_basic_integration.py"
      ],
      "recommendation": "Keep test_basic_integration.py, archive others"
    },
    {
      "files": [
        "test_schemaless.py",
        "test_schemaless.py"
      ],
      "recommendation": "Keep test_schemaless.py, archive others"
    },
    {
      "files": [
        "test_minimal_terminus.py",
        "test_minimal_terminus.py"
      ],
      "recommendation": "Keep test_minimal_terminus.py, archive others"
    },
    {
      "files": [
        "test_schema_direct.py",
        "test_schema_direct.py"
      ],
      "recommendation": "Keep test_schema_direct.py, archive others"
    },
    {
      "files": [
        "test_terminusdb_schema.py",
        "test_terminusdb_schema.py"
      ],
      "recommendation": "Keep test_terminusdb_schema.py, archive others"
    },
    {
      "files": [
        "test_jwt_branch_creation.py",
        "test_jwt_branch_creation.py"
      ],
      "recommendation": "Keep test_jwt_branch_creation.py, archive others"
    },
    {
      "files": [
        "test_branch_audit.py",
        "test_branch_audit.py"
      ],
      "recommendation": "Keep test_branch_audit.py, archive others"
    },
    {
      "files": [
        "test_terminusdb_direct.py",
        "test_terminusdb_direct.py"
      ],
      "recommendation": "Keep test_terminusdb_direct.py, archive others"
    },
    {
      "files": [
        "test_audit_basic.py",
        "test_audit_basic.py"
      ],
      "recommendation": "Keep test_audit_basic.py, archive others"
    },
    {
      "files": [
        "test_audit_service_integration.py",
        "test_audit_service_integration.py"
      ],
      "recommendation": "Keep test_audit_service_integration.py, archive others"
    },
    {
      "files": [
        "user-service/test_key_loading.py",
        "user-service/test_key_loading.py"
      ],
      "recommendation": "Keep test_key_loading.py, archive others"
    },
    {
      "files": [
        "test_schema_document_services.py",
        "test_schema_document_services.py"
      ],
      "recommendation": "Keep test_schema_document_services.py, archive others"
    },
    {
      "files": [
        "test_jwks_implementation.py",
        "test_jwks_implementation.py"
      ],
      "recommendation": "Keep test_jwks_implementation.py, archive others"
    },
    {
      "files": [
        "user-service/test_role_service_transaction_isolated.py",
        "user-service/test_role_service_transaction_isolated.py"
      ],
      "recommendation": "Keep test_role_service_transaction_isolated.py, archive others"
    },
    {
      "files": [
        "user-service/test_role_service_fixed.py",
        "user-service/test_role_service_fixed.py"
      ],
      "recommendation": "Keep test_role_service_fixed.py, archive others"
    },
    {
      "files": [
        "test_branch_service.py",
        "test_branch_service.py"
      ],
      "recommendation": "Keep test_branch_service.py, archive others"
    },
    {
      "files": [
        "user-service/test_role_service.py",
        "user-service/test_role_service.py"
      ],
      "recommendation": "Keep test_role_service.py, archive others"
    },
    {
      "files": [
        "test_advanced_integration.py",
        "test_advanced_integration.py"
      ],
      "recommendation": "Keep test_advanced_integration.py, archive others"
    },
    {
      "files": [
        "test_audit_integration.py",
        "test_audit_integration.py"
      ],
      "recommendation": "Keep test_audit_integration.py, archive others"
    },
    {
      "files": [
        "test_trailing_slash_redirect.py",
        "test_trailing_slash_redirect.py"
      ],
      "recommendation": "Keep test_trailing_slash_redirect.py, archive others"
    },
    {
      "files": [
        "test_services.py",
        "test_services.py"
      ],
      "recommendation": "Keep test_services.py, archive others"
    },
    {
      "files": [
        "test_integration_with_trailing_slash.py",
        "test_integration_with_trailing_slash.py"
      ],
      "recommendation": "Keep test_integration_with_trailing_slash.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_middleware_debug.py",
        "ontology-management-service/test_middleware_debug.py"
      ],
      "recommendation": "Keep test_middleware_debug.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_debug_app.py",
        "ontology-management-service/test_debug_app.py"
      ],
      "recommendation": "Keep test_debug_app.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_minimal_main.py",
        "ontology-management-service/test_minimal_main.py"
      ],
      "recommendation": "Keep test_minimal_main.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_simple_factory.py",
        "ontology-management-service/test_simple_factory.py"
      ],
      "recommendation": "Keep test_simple_factory.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_minimal.py",
        "ontology-management-service/test_minimal.py"
      ],
      "recommendation": "Keep test_minimal.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_api_integration.py",
        "ontology-management-service/tests/integration/test_api_integration.py"
      ],
      "recommendation": "Keep test_api_integration.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/test_schema_service.py",
        "ontology-management-service/tests/unit/test_schema_service.py"
      ],
      "recommendation": "Keep test_schema_service.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/test_schema_repository.py",
        "ontology-management-service/tests/unit/test_schema_repository.py"
      ],
      "recommendation": "Keep test_schema_repository.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/models/test_domain.py",
        "ontology-management-service/tests/unit/models/test_domain.py"
      ],
      "recommendation": "Keep test_domain.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/integrations/test_iam_service_client.py",
        "ontology-management-service/tests/unit/core/integrations/test_iam_service_client.py"
      ],
      "recommendation": "Keep test_iam_service_client.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_database_routing.py",
        "ontology-management-service/tests/integration/test_database_routing.py"
      ],
      "recommendation": "Keep test_database_routing.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_async_merge.py",
        "ontology-management-service/tests/integration/test_async_merge.py"
      ],
      "recommendation": "Keep test_async_merge.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/branch/test_branch_service.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service.py"
      ],
      "recommendation": "Keep test_branch_service.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/integrations/test_iam_service_client_advanced.py",
        "ontology-management-service/tests/unit/core/integrations/test_iam_service_client_advanced.py"
      ],
      "recommendation": "Keep test_iam_service_client_advanced.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service_advanced.py",
        "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service_advanced.py"
      ],
      "recommendation": "Keep test_time_travel_service_advanced.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/validation/test_tampering_detection.py",
        "ontology-management-service/tests/unit/core/validation/test_tampering_detection.py"
      ],
      "recommendation": "Keep test_tampering_detection.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/validation/test_input_sanitization.py",
        "ontology-management-service/tests/unit/core/validation/test_input_sanitization.py"
      ],
      "recommendation": "Keep test_input_sanitization.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/versioning/test_merge_engine_advanced.py",
        "ontology-management-service/tests/unit/core/versioning/test_merge_engine_advanced.py"
      ],
      "recommendation": "Keep test_merge_engine_advanced.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/versioning/test_delta_compression.py",
        "ontology-management-service/tests/unit/core/versioning/test_delta_compression.py"
      ],
      "recommendation": "Keep test_delta_compression.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/schema/test_conflict_resolver.py",
        "ontology-management-service/tests/unit/core/schema/test_conflict_resolver.py"
      ],
      "recommendation": "Keep test_conflict_resolver.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/versioning/test_merge_engine.py",
        "ontology-management-service/tests/unit/core/versioning/test_merge_engine.py"
      ],
      "recommendation": "Keep test_merge_engine.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/graph/test_graph_repositories.py",
        "ontology-management-service/tests/unit/core/graph/test_graph_repositories.py"
      ],
      "recommendation": "Keep test_graph_repositories.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service.py",
        "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service.py"
      ],
      "recommendation": "Keep test_time_travel_service.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py"
      ],
      "recommendation": "Keep test_branch_service_comprehensive_simple.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive.py"
      ],
      "recommendation": "Keep test_branch_service_comprehensive.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/validation/test_validation_service.py",
        "ontology-management-service/tests/unit/core/validation/test_validation_service.py"
      ],
      "recommendation": "Keep test_validation_service.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py"
      ],
      "recommendation": "Keep test_terminus_db_simple.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_fixed.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_fixed.py"
      ],
      "recommendation": "Keep test_terminus_db_fixed.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/middleware/test_auth_middleware_basic.py",
        "ontology-management-service/tests/unit/middleware/test_auth_middleware_basic.py"
      ],
      "recommendation": "Keep test_auth_middleware_basic.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/middleware/test_auth_middleware.py",
        "ontology-management-service/tests/unit/middleware/test_auth_middleware.py"
      ],
      "recommendation": "Keep test_auth_middleware.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_basic.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_basic.py"
      ],
      "recommendation": "Keep test_terminus_db_basic.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/database/clients/test_terminus_db.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db.py"
      ],
      "recommendation": "Keep test_terminus_db.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/schema/test_schema_service.py",
        "ontology-management-service/tests/unit/core/schema/test_schema_service.py"
      ],
      "recommendation": "Keep test_schema_service.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/branch/test_branch_service_basic.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service_basic.py"
      ],
      "recommendation": "Keep test_branch_service_basic.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/utils/test_retry_execution.py",
        "ontology-management-service/tests/unit/utils/test_retry_execution.py"
      ],
      "recommendation": "Keep test_retry_execution.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_integration.py",
        "user-service/tests/test_integration.py"
      ],
      "recommendation": "Keep test_integration.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_e2e.py",
        "user-service/tests/test_e2e.py"
      ],
      "recommendation": "Keep test_e2e.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_security.py",
        "user-service/tests/test_security.py"
      ],
      "recommendation": "Keep test_security.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/utils/test_bulkhead.py",
        "ontology-management-service/tests/unit/utils/test_bulkhead.py"
      ],
      "recommendation": "Keep test_bulkhead.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/utils/test_retry_budget.py",
        "ontology-management-service/tests/unit/utils/test_retry_budget.py"
      ],
      "recommendation": "Keep test_retry_budget.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/utils/test_circuit_breaker.py",
        "ontology-management-service/tests/unit/utils/test_circuit_breaker.py"
      ],
      "recommendation": "Keep test_circuit_breaker.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/utils/test_retry_config.py",
        "ontology-management-service/tests/unit/utils/test_retry_config.py"
      ],
      "recommendation": "Keep test_retry_config.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/test_auth_utils.py",
        "ontology-management-service/tests/unit/core/test_auth_utils.py"
      ],
      "recommendation": "Keep test_auth_utils.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_auth_service.py",
        "user-service/tests/test_auth_service.py"
      ],
      "recommendation": "Keep test_auth_service.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/unit/core/validation/test_service.py",
        "ontology-management-service/tests/unit/core/validation/test_service.py"
      ],
      "recommendation": "Keep test_service.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_oms_subscriber_coverage.py",
        "audit-service/tests/test_oms_subscriber_coverage.py"
      ],
      "recommendation": "Keep test_oms_subscriber_coverage.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_rate_limit.py",
        "user-service/tests/test_rate_limit.py"
      ],
      "recommendation": "Keep test_rate_limit.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_missing_coverage.py",
        "audit-service/tests/test_missing_coverage.py"
      ],
      "recommendation": "Keep test_missing_coverage.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_auth.py",
        "audit-service/tests/test_auth.py"
      ],
      "recommendation": "Keep test_auth.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_coverage_boost.py",
        "audit-service/tests/test_coverage_boost.py"
      ],
      "recommendation": "Keep test_coverage_boost.py, archive others"
    },
    {
      "files": [
        "packages/backend/common_rate_limiting/tests/test_rate_limiting.py",
        "packages/backend/common_rate_limiting/tests/test_rate_limiting.py"
      ],
      "recommendation": "Keep test_rate_limiting.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_mfa_service.py",
        "user-service/tests/test_mfa_service.py"
      ],
      "recommendation": "Keep test_mfa_service.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_env_patch.py",
        "audit-service/tests/test_env_patch.py"
      ],
      "recommendation": "Keep test_env_patch.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_core_functionality_fixed.py",
        "audit-service/tests/test_core_functionality_fixed.py"
      ],
      "recommendation": "Keep test_core_functionality_fixed.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_core_functionality.py",
        "audit-service/tests/test_core_functionality.py"
      ],
      "recommendation": "Keep test_core_functionality.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_integration.py",
        "audit-service/tests/test_integration.py"
      ],
      "recommendation": "Keep test_integration.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_simple.py",
        "audit-service/tests/test_simple.py"
      ],
      "recommendation": "Keep test_simple.py, archive others"
    },
    {
      "files": [
        "packages/backend/common_logging/tests/test_logging.py",
        "packages/backend/common_logging/tests/test_logging.py"
      ],
      "recommendation": "Keep test_logging.py, archive others"
    },
    {
      "files": [
        "packages/backend/common_security/tests/test_security.py",
        "packages/backend/common_security/tests/test_security.py"
      ],
      "recommendation": "Keep test_security.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_validators.py",
        "user-service/tests/test_validators.py"
      ],
      "recommendation": "Keep test_validators.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_delta_encoding.py",
        "ontology-management-service/tests/integration/test_delta_encoding.py"
      ],
      "recommendation": "Keep test_delta_encoding.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_unfoldable_documents.py",
        "ontology-management-service/tests/integration/test_unfoldable_documents.py"
      ],
      "recommendation": "Keep test_unfoldable_documents.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_metadata_frames.py",
        "ontology-management-service/tests/integration/test_metadata_frames.py"
      ],
      "recommendation": "Keep test_metadata_frames.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_maximum_coverage.py",
        "audit-service/tests/test_maximum_coverage.py"
      ],
      "recommendation": "Keep test_maximum_coverage.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_final_coverage_push.py",
        "audit-service/tests/test_final_coverage_push.py"
      ],
      "recommendation": "Keep test_final_coverage_push.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_user_model.py",
        "user-service/tests/test_user_model.py"
      ],
      "recommendation": "Keep test_user_model.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_intensive_coverage.py",
        "audit-service/tests/test_intensive_coverage.py"
      ],
      "recommendation": "Keep test_intensive_coverage.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_real_implementation.py",
        "audit-service/tests/test_real_implementation.py"
      ],
      "recommendation": "Keep test_real_implementation.py, archive others"
    },
    {
      "files": [
        "audit-service/tests/test_additional_coverage.py",
        "audit-service/tests/test_additional_coverage.py"
      ],
      "recommendation": "Keep test_additional_coverage.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_user_service.py",
        "user-service/tests/test_user_service.py"
      ],
      "recommendation": "Keep test_user_service.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_graph_analysis_tracing_cache.py",
        "ontology-management-service/tests/integration/test_graph_analysis_tracing_cache.py"
      ],
      "recommendation": "Keep test_graph_analysis_tracing_cache.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_security_summary.py",
        "user-service/tests/test_security_summary.py"
      ],
      "recommendation": "Keep test_security_summary.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_password_security.py",
        "user-service/tests/test_password_security.py"
      ],
      "recommendation": "Keep test_password_security.py, archive others"
    },
    {
      "files": [
        "user-service/tests/test_jwt.py",
        "user-service/tests/test_jwt.py"
      ],
      "recommendation": "Keep test_jwt.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_database_import.py",
        "ontology-management-service/test_database_import.py"
      ],
      "recommendation": "Keep test_database_import.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_integration.py",
        "ontology-management-service/test_integration.py"
      ],
      "recommendation": "Keep test_integration.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_full_stack.py",
        "ontology-management-service/test_full_stack.py"
      ],
      "recommendation": "Keep test_full_stack.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/api/test_endpoints.py",
        "ontology-management-service/api/test_endpoints.py"
      ],
      "recommendation": "Keep test_endpoints.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/test_full_integration.py",
        "ontology-management-service/test_full_integration.py"
      ],
      "recommendation": "Keep test_full_integration.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_user_oms_gateway_integration.py",
        "ontology-management-service/tests/integration/test_user_oms_gateway_integration.py"
      ],
      "recommendation": "Keep test_user_oms_gateway_integration.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_real_nats_integration.py",
        "ontology-management-service/tests/integration/test_real_nats_integration.py"
      ],
      "recommendation": "Keep test_real_nats_integration.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_end_to_end_workflow.py",
        "ontology-management-service/tests/integration/test_end_to_end_workflow.py"
      ],
      "recommendation": "Keep test_end_to_end_workflow.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_full_api_integration.py",
        "ontology-management-service/tests/integration/test_full_api_integration.py"
      ],
      "recommendation": "Keep test_full_api_integration.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_nats_event_flow.py",
        "ontology-management-service/tests/integration/test_nats_event_flow.py"
      ],
      "recommendation": "Keep test_nats_event_flow.py, archive others"
    },
    {
      "files": [
        "user-service/src/test_user_creation.py",
        "user-service/src/test_user_creation.py"
      ],
      "recommendation": "Keep test_user_creation.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/integration/test_time_travel_queries.py",
        "ontology-management-service/tests/integration/test_time_travel_queries.py"
      ],
      "recommendation": "Keep test_time_travel_queries.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/test_streaming_performance.py",
        "ontology-management-service/tests/test_streaming_performance.py"
      ],
      "recommendation": "Keep test_streaming_performance.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/test_mtls_fallback_integration.py",
        "ontology-management-service/tests/test_mtls_fallback_integration.py"
      ],
      "recommendation": "Keep test_mtls_fallback_integration.py, archive others"
    },
    {
      "files": [
        "ontology-management-service/tests/test_unified_http_client.py",
        "ontology-management-service/tests/test_unified_http_client.py"
      ],
      "recommendation": "Keep test_unified_http_client.py, archive others"
    }
  ],
  "similar_files": [
    {
      "base_name": "test_cleanup_analysis",
      "files": [
        "test_cleanup_analysis.py",
        "test_cleanup_analysis.py"
      ],
      "newest": "test_cleanup_analysis.py",
      "recommendation": "Keep newest: test_cleanup_analysis.py"
    },
    {
      "base_name": "test",
      "files": [
        "audit-service/tests/test_simple.py",
        "audit-service/tests/test_simple.py",
        "user-service/test_env/lib/python3.9/site-packages/setuptools/command/test.py"
      ],
      "newest": "user-service/test_env/lib/python3.9/site-packages/setuptools/command/test.py",
      "recommendation": "Keep newest: test.py"
    },
    {
      "base_name": "test_microservices_locally",
      "files": [
        "ontology-management-service/test_microservices_locally.py",
        "ontology-management-service/test_microservices_locally.py"
      ],
      "newest": "ontology-management-service/test_microservices_locally.py",
      "recommendation": "Keep newest: test_microservices_locally.py"
    },
    {
      "base_name": "test_alerting_system",
      "files": [
        "test_alerting_system.py",
        "test_alerting_system.py"
      ],
      "newest": "test_alerting_system.py",
      "recommendation": "Keep newest: test_alerting_system.py"
    },
    {
      "base_name": "test_jwt_integration_proof",
      "files": [
        "test_jwt_integration_proof.py",
        "test_jwt_integration_proof.py"
      ],
      "newest": "test_jwt_integration_proof.py",
      "recommendation": "Keep newest: test_jwt_integration_proof.py"
    },
    {
      "base_name": "test_real_services_integration",
      "files": [
        "test_real_services_integration.py",
        "test_real_services_integration.py"
      ],
      "newest": "test_real_services_integration.py",
      "recommendation": "Keep newest: test_real_services_integration.py"
    },
    {
      "base_name": "test_msa_integration",
      "files": [
        "test_msa_integration_complete.py",
        "test_msa_integration_complete.py",
        "test_msa_integration_final.py",
        "test_msa_integration_final.py"
      ],
      "newest": "test_msa_integration_final.py",
      "recommendation": "Keep newest: test_msa_integration_final.py"
    },
    {
      "base_name": "test_core_modules_health",
      "files": [
        "test_core_modules_health.py",
        "test_core_modules_health.py"
      ],
      "newest": "test_core_modules_health.py",
      "recommendation": "Keep newest: test_core_modules_health.py"
    },
    {
      "base_name": "test_middleware_improvements",
      "files": [
        "test_middleware_improvements.py",
        "test_middleware_improvements.py"
      ],
      "newest": "test_middleware_improvements.py",
      "recommendation": "Keep newest: test_middleware_improvements.py"
    },
    {
      "base_name": "test_middleware_dependency",
      "files": [
        "test_middleware_dependency_simple.py",
        "test_middleware_dependency_simple.py"
      ],
      "newest": "test_middleware_dependency_simple.py",
      "recommendation": "Keep newest: test_middleware_dependency_simple.py"
    },
    {
      "base_name": "test_middleware_dependency_order",
      "files": [
        "test_middleware_dependency_order.py",
        "test_middleware_dependency_order.py"
      ],
      "newest": "test_middleware_dependency_order.py",
      "recommendation": "Keep newest: test_middleware_dependency_order.py"
    },
    {
      "base_name": "test_middleware_static_verification",
      "files": [
        "test_middleware_static_verification.py",
        "test_middleware_static_verification.py"
      ],
      "newest": "test_middleware_static_verification.py",
      "recommendation": "Keep newest: test_middleware_static_verification.py"
    },
    {
      "base_name": "test_middleware_comprehensive_integration",
      "files": [
        "test_middleware_comprehensive_integration.py",
        "test_middleware_comprehensive_integration.py"
      ],
      "newest": "test_middleware_comprehensive_integration.py",
      "recommendation": "Keep newest: test_middleware_comprehensive_integration.py"
    },
    {
      "base_name": "test_all_middleware_activation",
      "files": [
        "test_all_middleware_activation.py",
        "test_all_middleware_activation.py"
      ],
      "newest": "test_all_middleware_activation.py",
      "recommendation": "Keep newest: test_all_middleware_activation.py"
    },
    {
      "base_name": "test_pyroscope_integration",
      "files": [
        "test_pyroscope_integration.py",
        "test_pyroscope_integration.py"
      ],
      "newest": "test_pyroscope_integration.py",
      "recommendation": "Keep newest: test_pyroscope_integration.py"
    },
    {
      "base_name": "test_enterprise_monitoring",
      "files": [
        "test_enterprise_monitoring_complete.py",
        "test_enterprise_monitoring_complete.py",
        "test_enterprise_monitoring_simple.py",
        "test_enterprise_monitoring_simple.py"
      ],
      "newest": "test_enterprise_monitoring_simple.py",
      "recommendation": "Keep newest: test_enterprise_monitoring_simple.py"
    },
    {
      "base_name": "test_enterprise_observability_integration",
      "files": [
        "test_enterprise_observability_integration.py",
        "test_enterprise_observability_integration.py"
      ],
      "newest": "test_enterprise_observability_integration.py",
      "recommendation": "Keep newest: test_enterprise_observability_integration.py"
    },
    {
      "base_name": "test_resilience_dashboard",
      "files": [
        "test_resilience_dashboard.py",
        "test_resilience_dashboard.py"
      ],
      "newest": "test_resilience_dashboard.py",
      "recommendation": "Keep newest: test_resilience_dashboard.py"
    },
    {
      "base_name": "test_adaptive_etag_caching",
      "files": [
        "test_adaptive_etag_caching.py",
        "test_adaptive_etag_caching.py"
      ],
      "newest": "test_adaptive_etag_caching.py",
      "recommendation": "Keep newest: test_adaptive_etag_caching.py"
    },
    {
      "base_name": "test_distributed_circuit_breaker",
      "files": [
        "test_distributed_circuit_breaker.py",
        "test_distributed_circuit_breaker.py"
      ],
      "newest": "test_distributed_circuit_breaker.py",
      "recommendation": "Keep newest: test_distributed_circuit_breaker.py"
    },
    {
      "base_name": "test_circuit_with_server_errors",
      "files": [
        "test_circuit_with_server_errors.py",
        "test_circuit_with_server_errors.py"
      ],
      "newest": "test_circuit_with_server_errors.py",
      "recommendation": "Keep newest: test_circuit_with_server_errors.py"
    },
    {
      "base_name": "test_global_circuit",
      "files": [
        "test_global_circuit_simple.py",
        "test_global_circuit_simple.py"
      ],
      "newest": "test_global_circuit_simple.py",
      "recommendation": "Keep newest: test_global_circuit_simple.py"
    },
    {
      "base_name": "test_global_circuit_breaker",
      "files": [
        "test_global_circuit_breaker.py",
        "test_global_circuit_breaker.py"
      ],
      "newest": "test_global_circuit_breaker.py",
      "recommendation": "Keep newest: test_global_circuit_breaker.py"
    },
    {
      "base_name": "test_etag_comprehensive",
      "files": [
        "test_etag_comprehensive.py",
        "test_etag_comprehensive.py"
      ],
      "newest": "test_etag_comprehensive.py",
      "recommendation": "Keep newest: test_etag_comprehensive.py"
    },
    {
      "base_name": "test_extreme_failure_scenarios",
      "files": [
        "test_extreme_failure_scenarios.py",
        "test_extreme_failure_scenarios.py"
      ],
      "newest": "test_extreme_failure_scenarios.py",
      "recommendation": "Keep newest: test_extreme_failure_scenarios.py"
    },
    {
      "base_name": "test_three_service_resilience_integration",
      "files": [
        "test_three_service_resilience_integration.py",
        "test_three_service_resilience_integration.py"
      ],
      "newest": "test_three_service_resilience_integration.py",
      "recommendation": "Keep newest: test_three_service_resilience_integration.py"
    },
    {
      "base_name": "test_circuit_breaker_specific",
      "files": [
        "test_circuit_breaker_specific.py",
        "test_circuit_breaker_specific.py"
      ],
      "newest": "test_circuit_breaker_specific.py",
      "recommendation": "Keep newest: test_circuit_breaker_specific.py"
    },
    {
      "base_name": "test_routes",
      "files": [
        "ontology-management-service/api/v1/test_routes.py",
        "ontology-management-service/api/v1/test_routes.py"
      ],
      "newest": "ontology-management-service/api/v1/test_routes.py",
      "recommendation": "Keep newest: test_routes.py"
    },
    {
      "base_name": "test_oms_resilience",
      "files": [
        "test_oms_resilience.py",
        "test_oms_resilience.py",
        "test_oms_resilience_final.py",
        "test_oms_resilience_final.py"
      ],
      "newest": "test_oms_resilience_final.py",
      "recommendation": "Keep newest: test_oms_resilience_final.py"
    },
    {
      "base_name": "test_oms_resilience_activated",
      "files": [
        "test_oms_resilience_activated.py",
        "test_oms_resilience_activated.py"
      ],
      "newest": "test_oms_resilience_activated.py",
      "recommendation": "Keep newest: test_oms_resilience_activated.py"
    },
    {
      "base_name": "test_audit_resilience",
      "files": [
        "test_audit_resilience.py",
        "test_audit_resilience.py"
      ],
      "newest": "test_audit_resilience.py",
      "recommendation": "Keep newest: test_audit_resilience.py"
    },
    {
      "base_name": "test_circuit_breaker",
      "files": [
        "ontology-management-service/tests/unit/utils/test_circuit_breaker.py",
        "ontology-management-service/tests/unit/utils/test_circuit_breaker.py",
        "test_circuit_breaker.py",
        "test_circuit_breaker.py"
      ],
      "newest": "test_circuit_breaker.py",
      "recommendation": "Keep newest: test_circuit_breaker.py"
    },
    {
      "base_name": "test_business_scenarios",
      "files": [
        "test_business_scenarios.py",
        "test_business_scenarios.py",
        "test_business_scenarios_fixed.py",
        "test_business_scenarios_fixed.py"
      ],
      "newest": "test_business_scenarios_fixed.py",
      "recommendation": "Keep newest: test_business_scenarios_fixed.py"
    },
    {
      "base_name": "test_detailed_integration",
      "files": [
        "test_detailed_integration.py",
        "test_detailed_integration.py"
      ],
      "newest": "test_detailed_integration.py",
      "recommendation": "Keep newest: test_detailed_integration.py"
    },
    {
      "base_name": "test_full_integration",
      "files": [
        "ontology-management-service/test_full_integration.py",
        "ontology-management-service/test_full_integration.py",
        "test_full_integration.py",
        "test_full_integration.py"
      ],
      "newest": "test_full_integration.py",
      "recommendation": "Keep newest: test_full_integration.py"
    },
    {
      "base_name": "test_integration",
      "files": [
        "ontology-management-service/test_integration.py",
        "ontology-management-service/test_integration.py",
        "audit-service/tests/test_integration.py",
        "audit-service/tests/test_integration.py",
        "user-service/tests/test_integration.py",
        "user-service/tests/test_integration.py",
        "test_integration.py",
        "test_integration.py"
      ],
      "newest": "test_integration.py",
      "recommendation": "Keep newest: test_integration.py"
    },
    {
      "base_name": "test_container_integration",
      "files": [
        "test_container_integration.py",
        "test_container_integration.py"
      ],
      "newest": "test_container_integration.py",
      "recommendation": "Keep newest: test_container_integration.py"
    },
    {
      "base_name": "test_jwt_decode",
      "files": [
        "test_jwt_decode.py",
        "test_jwt_decode.py"
      ],
      "newest": "test_jwt_decode.py",
      "recommendation": "Keep newest: test_jwt_decode.py"
    },
    {
      "base_name": "test_jwt_in_container",
      "files": [
        "test_jwt_in_container.py",
        "test_jwt_in_container.py"
      ],
      "newest": "test_jwt_in_container.py",
      "recommendation": "Keep newest: test_jwt_in_container.py"
    },
    {
      "base_name": "test_audit_jwt",
      "files": [
        "test_audit_jwt.py",
        "test_audit_jwt.py"
      ],
      "newest": "test_audit_jwt.py",
      "recommendation": "Keep newest: test_audit_jwt.py"
    },
    {
      "base_name": "test_login_only",
      "files": [
        "test_login_only.py",
        "test_login_only.py"
      ],
      "newest": "test_login_only.py",
      "recommendation": "Keep newest: test_login_only.py"
    },
    {
      "base_name": "test_three_service_integration",
      "files": [
        "test_three_service_integration.py",
        "test_three_service_integration.py"
      ],
      "newest": "test_three_service_integration.py",
      "recommendation": "Keep newest: test_three_service_integration.py"
    },
    {
      "base_name": "test_audit_jwt_local",
      "files": [
        "test_audit_jwt_local.py",
        "test_audit_jwt_local.py"
      ],
      "newest": "test_audit_jwt_local.py",
      "recommendation": "Keep newest: test_audit_jwt_local.py"
    },
    {
      "base_name": "test_audit_jwt_config",
      "files": [
        "test_audit_jwt_config.py",
        "test_audit_jwt_config.py"
      ],
      "newest": "test_audit_jwt_config.py",
      "recommendation": "Keep newest: test_audit_jwt_config.py"
    },
    {
      "base_name": "test_service_token_only",
      "files": [
        "test_service_token_only.py",
        "test_service_token_only.py"
      ],
      "newest": "test_service_token_only.py",
      "recommendation": "Keep newest: test_service_token_only.py"
    },
    {
      "base_name": "test_jwt_auth",
      "files": [
        "test_jwt_auth_complete.py",
        "test_jwt_auth_complete.py",
        "test_jwt_auth_simple.py",
        "test_jwt_auth_simple.py"
      ],
      "newest": "test_jwt_auth_simple.py",
      "recommendation": "Keep newest: test_jwt_auth_simple.py"
    },
    {
      "base_name": "test_env_loading",
      "files": [
        "audit-service/test_env_loading.py",
        "audit-service/test_env_loading.py"
      ],
      "newest": "audit-service/test_env_loading.py",
      "recommendation": "Keep newest: test_env_loading.py"
    },
    {
      "base_name": "test_jwt_auth_fix",
      "files": [
        "user-service/test_jwt_auth_fix.py",
        "user-service/test_jwt_auth_fix.py"
      ],
      "newest": "user-service/test_jwt_auth_fix.py",
      "recommendation": "Keep newest: test_jwt_auth_fix.py"
    },
    {
      "base_name": "test_direct_validation",
      "files": [
        "test_direct_validation.py",
        "test_direct_validation.py"
      ],
      "newest": "test_direct_validation.py",
      "recommendation": "Keep newest: test_direct_validation.py"
    },
    {
      "base_name": "test_token_debug",
      "files": [
        "test_token_debug.py",
        "test_token_debug.py"
      ],
      "newest": "test_token_debug.py",
      "recommendation": "Keep newest: test_token_debug.py"
    },
    {
      "base_name": "test_audit_auth",
      "files": [
        "test_audit_auth.py",
        "test_audit_auth.py"
      ],
      "newest": "test_audit_auth.py",
      "recommendation": "Keep newest: test_audit_auth.py"
    },
    {
      "base_name": "test_jwt_validation2",
      "files": [
        "test_jwt_validation2.py",
        "test_jwt_validation2.py"
      ],
      "newest": "test_jwt_validation2.py",
      "recommendation": "Keep newest: test_jwt_validation2.py"
    },
    {
      "base_name": "test_jwt_validation",
      "files": [
        "test_jwt_validation.py",
        "test_jwt_validation.py"
      ],
      "newest": "test_jwt_validation.py",
      "recommendation": "Keep newest: test_jwt_validation.py"
    },
    {
      "base_name": "test_immediate_audit",
      "files": [
        "test_immediate_audit.py",
        "test_immediate_audit.py"
      ],
      "newest": "test_immediate_audit.py",
      "recommendation": "Keep newest: test_immediate_audit.py"
    },
    {
      "base_name": "test_audit_key",
      "files": [
        "test_audit_key.py",
        "test_audit_key.py"
      ],
      "newest": "test_audit_key.py",
      "recommendation": "Keep newest: test_audit_key.py"
    },
    {
      "base_name": "test_audit_with_service_token",
      "files": [
        "test_audit_with_service_token.py",
        "test_audit_with_service_token.py"
      ],
      "newest": "test_audit_with_service_token.py",
      "recommendation": "Keep newest: test_audit_with_service_token.py"
    },
    {
      "base_name": "test_complete_flow",
      "files": [
        "test_complete_flow.py",
        "test_complete_flow.py"
      ],
      "newest": "test_complete_flow.py",
      "recommendation": "Keep newest: test_complete_flow.py"
    },
    {
      "base_name": "test_oms_audit_integration",
      "files": [
        "test_oms_audit_integration.py",
        "test_oms_audit_integration.py"
      ],
      "newest": "test_oms_audit_integration.py",
      "recommendation": "Keep newest: test_oms_audit_integration.py"
    },
    {
      "base_name": "test_decode_service_token",
      "files": [
        "test_decode_service_token.py",
        "test_decode_service_token.py"
      ],
      "newest": "test_decode_service_token.py",
      "recommendation": "Keep newest: test_decode_service_token.py"
    },
    {
      "base_name": "test_token_exchange",
      "files": [
        "test_token_exchange.py",
        "test_token_exchange.py",
        "test_token_exchange_detailed.py",
        "test_token_exchange_detailed.py"
      ],
      "newest": "test_token_exchange_detailed.py",
      "recommendation": "Keep newest: test_token_exchange_detailed.py"
    },
    {
      "base_name": "test_comprehensive_integration",
      "files": [
        "test_comprehensive_integration.py",
        "test_comprehensive_integration.py"
      ],
      "newest": "test_comprehensive_integration.py",
      "recommendation": "Keep newest: test_comprehensive_integration.py"
    },
    {
      "base_name": "test_basic_integration",
      "files": [
        "test_basic_integration.py",
        "test_basic_integration.py"
      ],
      "newest": "test_basic_integration.py",
      "recommendation": "Keep newest: test_basic_integration.py"
    },
    {
      "base_name": "test_schemaless",
      "files": [
        "test_schemaless.py",
        "test_schemaless.py"
      ],
      "newest": "test_schemaless.py",
      "recommendation": "Keep newest: test_schemaless.py"
    },
    {
      "base_name": "test_minimal_terminus",
      "files": [
        "test_minimal_terminus.py",
        "test_minimal_terminus.py"
      ],
      "newest": "test_minimal_terminus.py",
      "recommendation": "Keep newest: test_minimal_terminus.py"
    },
    {
      "base_name": "test_schema_direct",
      "files": [
        "test_schema_direct.py",
        "test_schema_direct.py"
      ],
      "newest": "test_schema_direct.py",
      "recommendation": "Keep newest: test_schema_direct.py"
    },
    {
      "base_name": "test_terminusdb_schema",
      "files": [
        "test_terminusdb_schema.py",
        "test_terminusdb_schema.py"
      ],
      "newest": "test_terminusdb_schema.py",
      "recommendation": "Keep newest: test_terminusdb_schema.py"
    },
    {
      "base_name": "test_jwt_branch_creation",
      "files": [
        "test_jwt_branch_creation.py",
        "test_jwt_branch_creation.py"
      ],
      "newest": "test_jwt_branch_creation.py",
      "recommendation": "Keep newest: test_jwt_branch_creation.py"
    },
    {
      "base_name": "test_branch_audit",
      "files": [
        "test_branch_audit.py",
        "test_branch_audit.py"
      ],
      "newest": "test_branch_audit.py",
      "recommendation": "Keep newest: test_branch_audit.py"
    },
    {
      "base_name": "test_terminusdb_direct",
      "files": [
        "test_terminusdb_direct.py",
        "test_terminusdb_direct.py"
      ],
      "newest": "test_terminusdb_direct.py",
      "recommendation": "Keep newest: test_terminusdb_direct.py"
    },
    {
      "base_name": "test_audit_basic",
      "files": [
        "test_audit_basic.py",
        "test_audit_basic.py"
      ],
      "newest": "test_audit_basic.py",
      "recommendation": "Keep newest: test_audit_basic.py"
    },
    {
      "base_name": "test_audit_service_integration",
      "files": [
        "test_audit_service_integration.py",
        "test_audit_service_integration.py"
      ],
      "newest": "test_audit_service_integration.py",
      "recommendation": "Keep newest: test_audit_service_integration.py"
    },
    {
      "base_name": "test_key_loading",
      "files": [
        "user-service/test_key_loading.py",
        "user-service/test_key_loading.py"
      ],
      "newest": "user-service/test_key_loading.py",
      "recommendation": "Keep newest: test_key_loading.py"
    },
    {
      "base_name": "test_schema_document_services",
      "files": [
        "test_schema_document_services.py",
        "test_schema_document_services.py"
      ],
      "newest": "test_schema_document_services.py",
      "recommendation": "Keep newest: test_schema_document_services.py"
    },
    {
      "base_name": "test_jwks_implementation",
      "files": [
        "test_jwks_implementation.py",
        "test_jwks_implementation.py"
      ],
      "newest": "test_jwks_implementation.py",
      "recommendation": "Keep newest: test_jwks_implementation.py"
    },
    {
      "base_name": "test_role_service_transaction_isolated",
      "files": [
        "user-service/test_role_service_transaction_isolated.py",
        "user-service/test_role_service_transaction_isolated.py"
      ],
      "newest": "user-service/test_role_service_transaction_isolated.py",
      "recommendation": "Keep newest: test_role_service_transaction_isolated.py"
    },
    {
      "base_name": "test_role_service",
      "files": [
        "user-service/test_role_service.py",
        "user-service/test_role_service.py",
        "user-service/test_role_service_fixed.py",
        "user-service/test_role_service_fixed.py"
      ],
      "newest": "user-service/test_role_service_fixed.py",
      "recommendation": "Keep newest: test_role_service_fixed.py"
    },
    {
      "base_name": "test_branch_service",
      "files": [
        "ontology-management-service/tests/unit/core/branch/test_branch_service.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service.py",
        "test_branch_service.py",
        "test_branch_service.py"
      ],
      "newest": "test_branch_service.py",
      "recommendation": "Keep newest: test_branch_service.py"
    },
    {
      "base_name": "test_advanced_integration",
      "files": [
        "test_advanced_integration.py",
        "test_advanced_integration.py"
      ],
      "newest": "test_advanced_integration.py",
      "recommendation": "Keep newest: test_advanced_integration.py"
    },
    {
      "base_name": "test_audit_integration",
      "files": [
        "test_audit_integration.py",
        "test_audit_integration.py"
      ],
      "newest": "test_audit_integration.py",
      "recommendation": "Keep newest: test_audit_integration.py"
    },
    {
      "base_name": "test_trailing_slash_redirect",
      "files": [
        "test_trailing_slash_redirect.py",
        "test_trailing_slash_redirect.py"
      ],
      "newest": "test_trailing_slash_redirect.py",
      "recommendation": "Keep newest: test_trailing_slash_redirect.py"
    },
    {
      "base_name": "test_services",
      "files": [
        "test_services.py",
        "test_services.py"
      ],
      "newest": "test_services.py",
      "recommendation": "Keep newest: test_services.py"
    },
    {
      "base_name": "test_integration_with_trailing_slash",
      "files": [
        "test_integration_with_trailing_slash.py",
        "test_integration_with_trailing_slash.py"
      ],
      "newest": "test_integration_with_trailing_slash.py",
      "recommendation": "Keep newest: test_integration_with_trailing_slash.py"
    },
    {
      "base_name": "simple_test",
      "files": [
        "ontology-management-service/tests/utils/simple_test.py",
        "ontology-management-service/simple_test.py",
        "simple_test.py"
      ],
      "newest": "simple_test.py",
      "recommendation": "Keep newest: simple_test.py"
    },
    {
      "base_name": "test_middleware_debug",
      "files": [
        "ontology-management-service/test_middleware_debug.py",
        "ontology-management-service/test_middleware_debug.py"
      ],
      "newest": "ontology-management-service/test_middleware_debug.py",
      "recommendation": "Keep newest: test_middleware_debug.py"
    },
    {
      "base_name": "test_debug_app",
      "files": [
        "ontology-management-service/test_debug_app.py",
        "ontology-management-service/test_debug_app.py"
      ],
      "newest": "ontology-management-service/test_debug_app.py",
      "recommendation": "Keep newest: test_debug_app.py"
    },
    {
      "base_name": "test_minimal_main",
      "files": [
        "ontology-management-service/test_minimal_main.py",
        "ontology-management-service/test_minimal_main.py"
      ],
      "newest": "ontology-management-service/test_minimal_main.py",
      "recommendation": "Keep newest: test_minimal_main.py"
    },
    {
      "base_name": "test_simple_factory",
      "files": [
        "ontology-management-service/test_simple_factory.py",
        "ontology-management-service/test_simple_factory.py"
      ],
      "newest": "ontology-management-service/test_simple_factory.py",
      "recommendation": "Keep newest: test_simple_factory.py"
    },
    {
      "base_name": "test_minimal",
      "files": [
        "ontology-management-service/test_minimal.py",
        "ontology-management-service/test_minimal.py"
      ],
      "newest": "ontology-management-service/test_minimal.py",
      "recommendation": "Keep newest: test_minimal.py"
    },
    {
      "base_name": "test_api_integration",
      "files": [
        "ontology-management-service/tests/integration/test_api_integration.py",
        "ontology-management-service/tests/integration/test_api_integration.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_api_integration.py",
      "recommendation": "Keep newest: test_api_integration.py"
    },
    {
      "base_name": "test_schema_service",
      "files": [
        "ontology-management-service/tests/unit/core/schema/test_schema_service.py",
        "ontology-management-service/tests/unit/core/schema/test_schema_service.py",
        "ontology-management-service/tests/unit/test_schema_service.py",
        "ontology-management-service/tests/unit/test_schema_service.py"
      ],
      "newest": "ontology-management-service/tests/unit/test_schema_service.py",
      "recommendation": "Keep newest: test_schema_service.py"
    },
    {
      "base_name": "test_schema_repository",
      "files": [
        "ontology-management-service/tests/unit/test_schema_repository.py",
        "ontology-management-service/tests/unit/test_schema_repository.py"
      ],
      "newest": "ontology-management-service/tests/unit/test_schema_repository.py",
      "recommendation": "Keep newest: test_schema_repository.py"
    },
    {
      "base_name": "test_domain",
      "files": [
        "ontology-management-service/tests/unit/models/test_domain.py",
        "ontology-management-service/tests/unit/models/test_domain.py"
      ],
      "newest": "ontology-management-service/tests/unit/models/test_domain.py",
      "recommendation": "Keep newest: test_domain.py"
    },
    {
      "base_name": "test_iam_service_client",
      "files": [
        "ontology-management-service/tests/unit/core/integrations/test_iam_service_client.py",
        "ontology-management-service/tests/unit/core/integrations/test_iam_service_client.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/integrations/test_iam_service_client.py",
      "recommendation": "Keep newest: test_iam_service_client.py"
    },
    {
      "base_name": "test_database_routing",
      "files": [
        "ontology-management-service/tests/integration/test_database_routing.py",
        "ontology-management-service/tests/integration/test_database_routing.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_database_routing.py",
      "recommendation": "Keep newest: test_database_routing.py"
    },
    {
      "base_name": "test_async_merge",
      "files": [
        "ontology-management-service/tests/integration/test_async_merge.py",
        "ontology-management-service/tests/integration/test_async_merge.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_async_merge.py",
      "recommendation": "Keep newest: test_async_merge.py"
    },
    {
      "base_name": "test_iam_service_client_advanced",
      "files": [
        "ontology-management-service/tests/unit/core/integrations/test_iam_service_client_advanced.py",
        "ontology-management-service/tests/unit/core/integrations/test_iam_service_client_advanced.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/integrations/test_iam_service_client_advanced.py",
      "recommendation": "Keep newest: test_iam_service_client_advanced.py"
    },
    {
      "base_name": "test_time_travel_service_advanced",
      "files": [
        "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service_advanced.py",
        "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service_advanced.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service_advanced.py",
      "recommendation": "Keep newest: test_time_travel_service_advanced.py"
    },
    {
      "base_name": "test_tampering_detection",
      "files": [
        "ontology-management-service/tests/unit/core/validation/test_tampering_detection.py",
        "ontology-management-service/tests/unit/core/validation/test_tampering_detection.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/validation/test_tampering_detection.py",
      "recommendation": "Keep newest: test_tampering_detection.py"
    },
    {
      "base_name": "test_input_sanitization",
      "files": [
        "ontology-management-service/tests/unit/core/validation/test_input_sanitization.py",
        "ontology-management-service/tests/unit/core/validation/test_input_sanitization.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/validation/test_input_sanitization.py",
      "recommendation": "Keep newest: test_input_sanitization.py"
    },
    {
      "base_name": "test_merge_engine_advanced",
      "files": [
        "ontology-management-service/tests/unit/core/versioning/test_merge_engine_advanced.py",
        "ontology-management-service/tests/unit/core/versioning/test_merge_engine_advanced.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/versioning/test_merge_engine_advanced.py",
      "recommendation": "Keep newest: test_merge_engine_advanced.py"
    },
    {
      "base_name": "test_delta_compression",
      "files": [
        "ontology-management-service/tests/unit/core/versioning/test_delta_compression.py",
        "ontology-management-service/tests/unit/core/versioning/test_delta_compression.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/versioning/test_delta_compression.py",
      "recommendation": "Keep newest: test_delta_compression.py"
    },
    {
      "base_name": "test_conflict_resolver",
      "files": [
        "ontology-management-service/tests/unit/core/schema/test_conflict_resolver.py",
        "ontology-management-service/tests/unit/core/schema/test_conflict_resolver.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/schema/test_conflict_resolver.py",
      "recommendation": "Keep newest: test_conflict_resolver.py"
    },
    {
      "base_name": "test_merge_engine",
      "files": [
        "ontology-management-service/tests/unit/core/versioning/test_merge_engine.py",
        "ontology-management-service/tests/unit/core/versioning/test_merge_engine.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/versioning/test_merge_engine.py",
      "recommendation": "Keep newest: test_merge_engine.py"
    },
    {
      "base_name": "test_graph_repositories",
      "files": [
        "ontology-management-service/tests/unit/core/graph/test_graph_repositories.py",
        "ontology-management-service/tests/unit/core/graph/test_graph_repositories.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/graph/test_graph_repositories.py",
      "recommendation": "Keep newest: test_graph_repositories.py"
    },
    {
      "base_name": "test_time_travel_service",
      "files": [
        "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service.py",
        "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/time_travel/test_time_travel_service.py",
      "recommendation": "Keep newest: test_time_travel_service.py"
    },
    {
      "base_name": "test_branch_service_comprehensive",
      "files": [
        "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py",
      "recommendation": "Keep newest: test_branch_service_comprehensive_simple.py"
    },
    {
      "base_name": "test_validation_service",
      "files": [
        "ontology-management-service/tests/unit/core/validation/test_validation_service.py",
        "ontology-management-service/tests/unit/core/validation/test_validation_service.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/validation/test_validation_service.py",
      "recommendation": "Keep newest: test_validation_service.py"
    },
    {
      "base_name": "test_terminus_db",
      "files": [
        "ontology-management-service/tests/unit/database/clients/test_terminus_db.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_fixed.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_fixed.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py"
      ],
      "newest": "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py",
      "recommendation": "Keep newest: test_terminus_db_simple.py"
    },
    {
      "base_name": "test_auth_middleware_basic",
      "files": [
        "ontology-management-service/tests/unit/middleware/test_auth_middleware_basic.py",
        "ontology-management-service/tests/unit/middleware/test_auth_middleware_basic.py"
      ],
      "newest": "ontology-management-service/tests/unit/middleware/test_auth_middleware_basic.py",
      "recommendation": "Keep newest: test_auth_middleware_basic.py"
    },
    {
      "base_name": "test_auth_middleware",
      "files": [
        "ontology-management-service/tests/unit/middleware/test_auth_middleware.py",
        "ontology-management-service/tests/unit/middleware/test_auth_middleware.py"
      ],
      "newest": "ontology-management-service/tests/unit/middleware/test_auth_middleware.py",
      "recommendation": "Keep newest: test_auth_middleware.py"
    },
    {
      "base_name": "test_terminus_db_basic",
      "files": [
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_basic.py",
        "ontology-management-service/tests/unit/database/clients/test_terminus_db_basic.py"
      ],
      "newest": "ontology-management-service/tests/unit/database/clients/test_terminus_db_basic.py",
      "recommendation": "Keep newest: test_terminus_db_basic.py"
    },
    {
      "base_name": "test_branch_service_basic",
      "files": [
        "ontology-management-service/tests/unit/core/branch/test_branch_service_basic.py",
        "ontology-management-service/tests/unit/core/branch/test_branch_service_basic.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/branch/test_branch_service_basic.py",
      "recommendation": "Keep newest: test_branch_service_basic.py"
    },
    {
      "base_name": "test_retry_execution",
      "files": [
        "ontology-management-service/tests/unit/utils/test_retry_execution.py",
        "ontology-management-service/tests/unit/utils/test_retry_execution.py"
      ],
      "newest": "ontology-management-service/tests/unit/utils/test_retry_execution.py",
      "recommendation": "Keep newest: test_retry_execution.py"
    },
    {
      "base_name": "test_e2e",
      "files": [
        "user-service/tests/test_e2e.py",
        "user-service/tests/test_e2e.py"
      ],
      "newest": "user-service/tests/test_e2e.py",
      "recommendation": "Keep newest: test_e2e.py"
    },
    {
      "base_name": "test_security",
      "files": [
        "packages/backend/common_security/tests/test_security.py",
        "packages/backend/common_security/tests/test_security.py",
        "user-service/tests/test_security.py",
        "user-service/tests/test_security.py"
      ],
      "newest": "user-service/tests/test_security.py",
      "recommendation": "Keep newest: test_security.py"
    },
    {
      "base_name": "test_bulkhead",
      "files": [
        "ontology-management-service/tests/unit/utils/test_bulkhead.py",
        "ontology-management-service/tests/unit/utils/test_bulkhead.py"
      ],
      "newest": "ontology-management-service/tests/unit/utils/test_bulkhead.py",
      "recommendation": "Keep newest: test_bulkhead.py"
    },
    {
      "base_name": "test_retry_budget",
      "files": [
        "ontology-management-service/tests/unit/utils/test_retry_budget.py",
        "ontology-management-service/tests/unit/utils/test_retry_budget.py"
      ],
      "newest": "ontology-management-service/tests/unit/utils/test_retry_budget.py",
      "recommendation": "Keep newest: test_retry_budget.py"
    },
    {
      "base_name": "test_retry_config",
      "files": [
        "ontology-management-service/tests/unit/utils/test_retry_config.py",
        "ontology-management-service/tests/unit/utils/test_retry_config.py"
      ],
      "newest": "ontology-management-service/tests/unit/utils/test_retry_config.py",
      "recommendation": "Keep newest: test_retry_config.py"
    },
    {
      "base_name": "test_auth_utils",
      "files": [
        "ontology-management-service/tests/unit/core/test_auth_utils.py",
        "ontology-management-service/tests/unit/core/test_auth_utils.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/test_auth_utils.py",
      "recommendation": "Keep newest: test_auth_utils.py"
    },
    {
      "base_name": "test_auth_service",
      "files": [
        "user-service/tests/test_auth_service.py",
        "user-service/tests/test_auth_service.py"
      ],
      "newest": "user-service/tests/test_auth_service.py",
      "recommendation": "Keep newest: test_auth_service.py"
    },
    {
      "base_name": "test_service",
      "files": [
        "ontology-management-service/tests/unit/core/validation/test_service.py",
        "ontology-management-service/tests/unit/core/validation/test_service.py"
      ],
      "newest": "ontology-management-service/tests/unit/core/validation/test_service.py",
      "recommendation": "Keep newest: test_service.py"
    },
    {
      "base_name": "test_oms_subscriber_coverage",
      "files": [
        "audit-service/tests/test_oms_subscriber_coverage.py",
        "audit-service/tests/test_oms_subscriber_coverage.py"
      ],
      "newest": "audit-service/tests/test_oms_subscriber_coverage.py",
      "recommendation": "Keep newest: test_oms_subscriber_coverage.py"
    },
    {
      "base_name": "test_rate_limit",
      "files": [
        "user-service/tests/test_rate_limit.py",
        "user-service/tests/test_rate_limit.py"
      ],
      "newest": "user-service/tests/test_rate_limit.py",
      "recommendation": "Keep newest: test_rate_limit.py"
    },
    {
      "base_name": "test_missing_coverage",
      "files": [
        "audit-service/tests/test_missing_coverage.py",
        "audit-service/tests/test_missing_coverage.py"
      ],
      "newest": "audit-service/tests/test_missing_coverage.py",
      "recommendation": "Keep newest: test_missing_coverage.py"
    },
    {
      "base_name": "test_auth",
      "files": [
        "audit-service/tests/test_auth.py",
        "audit-service/tests/test_auth.py"
      ],
      "newest": "audit-service/tests/test_auth.py",
      "recommendation": "Keep newest: test_auth.py"
    },
    {
      "base_name": "test_coverage_boost",
      "files": [
        "audit-service/tests/test_coverage_boost.py",
        "audit-service/tests/test_coverage_boost.py"
      ],
      "newest": "audit-service/tests/test_coverage_boost.py",
      "recommendation": "Keep newest: test_coverage_boost.py"
    },
    {
      "base_name": "test_rate_limiting",
      "files": [
        "packages/backend/common_rate_limiting/tests/test_rate_limiting.py",
        "packages/backend/common_rate_limiting/tests/test_rate_limiting.py"
      ],
      "newest": "packages/backend/common_rate_limiting/tests/test_rate_limiting.py",
      "recommendation": "Keep newest: test_rate_limiting.py"
    },
    {
      "base_name": "test_mfa_service",
      "files": [
        "user-service/tests/test_mfa_service.py",
        "user-service/tests/test_mfa_service.py"
      ],
      "newest": "user-service/tests/test_mfa_service.py",
      "recommendation": "Keep newest: test_mfa_service.py"
    },
    {
      "base_name": "test_env_patch",
      "files": [
        "audit-service/tests/test_env_patch.py",
        "audit-service/tests/test_env_patch.py"
      ],
      "newest": "audit-service/tests/test_env_patch.py",
      "recommendation": "Keep newest: test_env_patch.py"
    },
    {
      "base_name": "test_core_functionality",
      "files": [
        "audit-service/tests/test_core_functionality.py",
        "audit-service/tests/test_core_functionality.py",
        "audit-service/tests/test_core_functionality_fixed.py",
        "audit-service/tests/test_core_functionality_fixed.py"
      ],
      "newest": "audit-service/tests/test_core_functionality_fixed.py",
      "recommendation": "Keep newest: test_core_functionality_fixed.py"
    },
    {
      "base_name": "test_logging",
      "files": [
        "packages/backend/common_logging/tests/test_logging.py",
        "packages/backend/common_logging/tests/test_logging.py"
      ],
      "newest": "packages/backend/common_logging/tests/test_logging.py",
      "recommendation": "Keep newest: test_logging.py"
    },
    {
      "base_name": "test_validators",
      "files": [
        "user-service/tests/test_validators.py",
        "user-service/tests/test_validators.py"
      ],
      "newest": "user-service/tests/test_validators.py",
      "recommendation": "Keep newest: test_validators.py"
    },
    {
      "base_name": "test_delta_encoding",
      "files": [
        "ontology-management-service/tests/integration/test_delta_encoding.py",
        "ontology-management-service/tests/integration/test_delta_encoding.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_delta_encoding.py",
      "recommendation": "Keep newest: test_delta_encoding.py"
    },
    {
      "base_name": "test_unfoldable_documents",
      "files": [
        "ontology-management-service/tests/integration/test_unfoldable_documents.py",
        "ontology-management-service/tests/integration/test_unfoldable_documents.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_unfoldable_documents.py",
      "recommendation": "Keep newest: test_unfoldable_documents.py"
    },
    {
      "base_name": "test_metadata_frames",
      "files": [
        "ontology-management-service/tests/integration/test_metadata_frames.py",
        "ontology-management-service/tests/integration/test_metadata_frames.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_metadata_frames.py",
      "recommendation": "Keep newest: test_metadata_frames.py"
    },
    {
      "base_name": "test_maximum_coverage",
      "files": [
        "audit-service/tests/test_maximum_coverage.py",
        "audit-service/tests/test_maximum_coverage.py"
      ],
      "newest": "audit-service/tests/test_maximum_coverage.py",
      "recommendation": "Keep newest: test_maximum_coverage.py"
    },
    {
      "base_name": "test_final_coverage_push",
      "files": [
        "audit-service/tests/test_final_coverage_push.py",
        "audit-service/tests/test_final_coverage_push.py"
      ],
      "newest": "audit-service/tests/test_final_coverage_push.py",
      "recommendation": "Keep newest: test_final_coverage_push.py"
    },
    {
      "base_name": "test_user_model",
      "files": [
        "user-service/tests/test_user_model.py",
        "user-service/tests/test_user_model.py"
      ],
      "newest": "user-service/tests/test_user_model.py",
      "recommendation": "Keep newest: test_user_model.py"
    },
    {
      "base_name": "test_intensive_coverage",
      "files": [
        "audit-service/tests/test_intensive_coverage.py",
        "audit-service/tests/test_intensive_coverage.py"
      ],
      "newest": "audit-service/tests/test_intensive_coverage.py",
      "recommendation": "Keep newest: test_intensive_coverage.py"
    },
    {
      "base_name": "test_real_implementation",
      "files": [
        "audit-service/tests/test_real_implementation.py",
        "audit-service/tests/test_real_implementation.py"
      ],
      "newest": "audit-service/tests/test_real_implementation.py",
      "recommendation": "Keep newest: test_real_implementation.py"
    },
    {
      "base_name": "test_additional_coverage",
      "files": [
        "audit-service/tests/test_additional_coverage.py",
        "audit-service/tests/test_additional_coverage.py"
      ],
      "newest": "audit-service/tests/test_additional_coverage.py",
      "recommendation": "Keep newest: test_additional_coverage.py"
    },
    {
      "base_name": "test_user_service",
      "files": [
        "user-service/tests/test_user_service.py",
        "user-service/tests/test_user_service.py"
      ],
      "newest": "user-service/tests/test_user_service.py",
      "recommendation": "Keep newest: test_user_service.py"
    },
    {
      "base_name": "test_graph_analysis_tracing_cache",
      "files": [
        "ontology-management-service/tests/integration/test_graph_analysis_tracing_cache.py",
        "ontology-management-service/tests/integration/test_graph_analysis_tracing_cache.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_graph_analysis_tracing_cache.py",
      "recommendation": "Keep newest: test_graph_analysis_tracing_cache.py"
    },
    {
      "base_name": "test_security_summary",
      "files": [
        "user-service/tests/test_security_summary.py",
        "user-service/tests/test_security_summary.py"
      ],
      "newest": "user-service/tests/test_security_summary.py",
      "recommendation": "Keep newest: test_security_summary.py"
    },
    {
      "base_name": "test_password_security",
      "files": [
        "user-service/tests/test_password_security.py",
        "user-service/tests/test_password_security.py"
      ],
      "newest": "user-service/tests/test_password_security.py",
      "recommendation": "Keep newest: test_password_security.py"
    },
    {
      "base_name": "test_jwt",
      "files": [
        "user-service/tests/test_jwt.py",
        "user-service/tests/test_jwt.py"
      ],
      "newest": "user-service/tests/test_jwt.py",
      "recommendation": "Keep newest: test_jwt.py"
    },
    {
      "base_name": "test_database_import",
      "files": [
        "ontology-management-service/test_database_import.py",
        "ontology-management-service/test_database_import.py"
      ],
      "newest": "ontology-management-service/test_database_import.py",
      "recommendation": "Keep newest: test_database_import.py"
    },
    {
      "base_name": "test_full_stack",
      "files": [
        "ontology-management-service/test_full_stack.py",
        "ontology-management-service/test_full_stack.py"
      ],
      "newest": "ontology-management-service/test_full_stack.py",
      "recommendation": "Keep newest: test_full_stack.py"
    },
    {
      "base_name": "test_endpoints",
      "files": [
        "ontology-management-service/api/test_endpoints.py",
        "ontology-management-service/api/test_endpoints.py"
      ],
      "newest": "ontology-management-service/api/test_endpoints.py",
      "recommendation": "Keep newest: test_endpoints.py"
    },
    {
      "base_name": "test_user_oms_gateway_integration",
      "files": [
        "ontology-management-service/tests/integration/test_user_oms_gateway_integration.py",
        "ontology-management-service/tests/integration/test_user_oms_gateway_integration.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_user_oms_gateway_integration.py",
      "recommendation": "Keep newest: test_user_oms_gateway_integration.py"
    },
    {
      "base_name": "test_real_nats_integration",
      "files": [
        "ontology-management-service/tests/integration/test_real_nats_integration.py",
        "ontology-management-service/tests/integration/test_real_nats_integration.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_real_nats_integration.py",
      "recommendation": "Keep newest: test_real_nats_integration.py"
    },
    {
      "base_name": "test_end_to_end_workflow",
      "files": [
        "ontology-management-service/tests/integration/test_end_to_end_workflow.py",
        "ontology-management-service/tests/integration/test_end_to_end_workflow.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_end_to_end_workflow.py",
      "recommendation": "Keep newest: test_end_to_end_workflow.py"
    },
    {
      "base_name": "test_full_api_integration",
      "files": [
        "ontology-management-service/tests/integration/test_full_api_integration.py",
        "ontology-management-service/tests/integration/test_full_api_integration.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_full_api_integration.py",
      "recommendation": "Keep newest: test_full_api_integration.py"
    },
    {
      "base_name": "test_nats_event_flow",
      "files": [
        "ontology-management-service/tests/integration/test_nats_event_flow.py",
        "ontology-management-service/tests/integration/test_nats_event_flow.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_nats_event_flow.py",
      "recommendation": "Keep newest: test_nats_event_flow.py"
    },
    {
      "base_name": "test_user_creation",
      "files": [
        "user-service/src/test_user_creation.py",
        "user-service/src/test_user_creation.py"
      ],
      "newest": "user-service/src/test_user_creation.py",
      "recommendation": "Keep newest: test_user_creation.py"
    },
    {
      "base_name": "test_time_travel_queries",
      "files": [
        "ontology-management-service/tests/integration/test_time_travel_queries.py",
        "ontology-management-service/tests/integration/test_time_travel_queries.py"
      ],
      "newest": "ontology-management-service/tests/integration/test_time_travel_queries.py",
      "recommendation": "Keep newest: test_time_travel_queries.py"
    },
    {
      "base_name": "test_streaming_performance",
      "files": [
        "ontology-management-service/tests/test_streaming_performance.py",
        "ontology-management-service/tests/test_streaming_performance.py"
      ],
      "newest": "ontology-management-service/tests/test_streaming_performance.py",
      "recommendation": "Keep newest: test_streaming_performance.py"
    },
    {
      "base_name": "test_mtls_fallback_integration",
      "files": [
        "ontology-management-service/tests/test_mtls_fallback_integration.py",
        "ontology-management-service/tests/test_mtls_fallback_integration.py"
      ],
      "newest": "ontology-management-service/tests/test_mtls_fallback_integration.py",
      "recommendation": "Keep newest: test_mtls_fallback_integration.py"
    },
    {
      "base_name": "test_unified_http_client",
      "files": [
        "ontology-management-service/tests/test_unified_http_client.py",
        "ontology-management-service/tests/test_unified_http_client.py"
      ],
      "newest": "ontology-management-service/tests/test_unified_http_client.py",
      "recommendation": "Keep newest: test_unified_http_client.py"
    }
  ],
  "recommendations": {
    "to_keep": [
      {
        "file": "test_alerting_system.py",
        "reason": "Core test suite"
      },
      {
        "file": "test_alerting_system.py",
        "reason": "Core test suite"
      },
      {
        "file": "test_core_modules_health.py",
        "reason": "Core test suite"
      },
      {
        "file": "test_core_modules_health.py",
        "reason": "Core test suite"
      }
    ],
    "to_merge": [
      {
        "files": [
          "test_jwt_validation.py",
          "test_jwt_validation2.py",
          "test_jwt_decode.py"
        ],
        "target": "test_jwt_validation.py",
        "reason": "Duplicate functionality"
      },
      {
        "files": [
          "test_audit_integration.py",
          "test_audit_service_integration.py",
          "test_oms_audit_integration.py"
        ],
        "target": "test_audit_integration.py",
        "reason": "Duplicate functionality"
      },
      {
        "files": [
          "test_circuit_breaker.py",
          "test_circuit_breaker_specific.py",
          "test_distributed_circuit_breaker.py"
        ],
        "target": "test_circuit_breaker.py",
        "reason": "Duplicate functionality"
      },
      {
        "files": [
          "test_integration.py",
          "test_basic_integration.py",
          "test_advanced_integration.py"
        ],
        "target": "test_integration.py",
        "reason": "Duplicate functionality"
      },
      {
        "files": [
          "test_business_scenarios.py",
          "test_business_scenarios_fixed.py"
        ],
        "target": "test_business_scenarios.py",
        "reason": "Duplicate functionality"
      }
    ],
    "to_archive": [
      {
        "file": "test_middleware_dependency_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_middleware_dependency_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_enterprise_monitoring_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_enterprise_monitoring_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_global_circuit_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_global_circuit_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_login_only.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_login_only.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_service_token_only.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_service_token_only.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_jwt_auth_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_jwt_auth_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "user-service/test_jwt_auth_fix.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "user-service/test_jwt_auth_fix.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_token_debug.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_token_debug.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_immediate_audit.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_immediate_audit.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_decode_service_token.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_decode_service_token.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_token_exchange_detailed.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_token_exchange_detailed.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_token_exchange.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "test_token_exchange.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "ontology-management-service/test_middleware_debug.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "ontology-management-service/test_middleware_debug.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "ontology-management-service/tests/unit/core/branch/test_branch_service_comprehensive_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py",
        "reason": "Temporary or debug test"
      },
      {
        "file": "ontology-management-service/tests/unit/database/clients/test_terminus_db_simple.py",
        "reason": "Temporary or debug test"
      }
    ],
    "to_update": []
  }
}