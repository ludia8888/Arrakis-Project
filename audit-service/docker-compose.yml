# Audit Service Docker Compose
version: '3.8'

services:
  audit-service:
    build: .
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://audit:password@postgres:5432/audit_db
      - REDIS_URL=redis://redis:6379/0
      - EVENT_BROKER_URL=nats://nats:4222
      - SIEM_ENDPOINT=http://elasticsearch:9200
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
      - nats
      - elasticsearch
    volumes:
      - ./logs:/app/logs
      - ./exports:/app/exports
    restart: unless-stopped
    networks:
      - audit-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=audit_db
      - POSTGRES_USER=audit
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - audit-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - audit-network

  nats:
    image: nats:2.10-alpine
    command: ["-js", "-m", "8222"]
    ports:
      - "4222:4222"  # NATS client port
      - "8222:8222"  # NATS monitoring port
    restart: unless-stopped
    networks:
      - audit-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    networks:
      - audit-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - audit-network

  # 모니터링
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    networks:
      - audit-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - audit-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  grafana_data:

networks:
  audit-network:
    driver: bridge