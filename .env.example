# Environment Configuration Example
# Copy this file to .env and replace placeholder values with real secrets

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT Configuration
JWT_SECRET_KEY=your-jwt-secret-key-replace-in-production
JWT_PRIVATE_KEY_BASE64=your-base64-encoded-private-key-replace-in-production
JWT_PUBLIC_KEY_BASE64=your-base64-encoded-public-key-replace-in-production
JWT_ALGORITHM=RS256
JWT_ISSUER=user-service
JWT_AUDIENCE=oms

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL
POSTGRES_USER=oms_user
POSTGRES_PASSWORD=HBdS5jcXaCCqqC-GbpE92kYlTYP-GGbJF1VugH1yyQ8
POSTGRES_DB=oms_db
DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}

# TerminusDB
TERMINUSDB_ENDPOINT=http://localhost:6363
TERMINUSDB_USER=admin
TERMINUSDB_ADMIN_PASSWORD=W9D_Epq9rKi-HH9vt-eBbIh7KitoPt45VmeddEVlLzw
TERMINUSDB_DB=arrakis

# Redis
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================
ENVIRONMENT=development
SERVICE_NAME=arrakis-service
LOG_LEVEL=INFO
DEBUG=false

# Service URLs
USER_SERVICE_URL=http://localhost:8001
AUDIT_SERVICE_URL=http://localhost:8002
OMS_SERVICE_URL=http://localhost:8000
EMBEDDING_SERVICE_URL=http://localhost:8003
SCHEDULER_SERVICE_URL=http://localhost:8004
EVENT_GATEWAY_URL=http://localhost:8005
DATA_KERNEL_SERVICE_URL=http://localhost:8006

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Replace all placeholder values with real secrets in production
# 2. Never commit real secrets to version control
# 3. Use environment-specific secret management (AWS Secrets Manager, etc.)
# 4. Rotate secrets regularly
# 5. Use strong, unique passwords for each service
