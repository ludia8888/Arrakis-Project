{
  "timestamp": "2025-07-11T23:55:33.854138",
  "middlewares": [
    {
      "name": "GlobalCircuitBreakerMiddleware",
      "verification": {
        "file": {
          "middleware": "GlobalCircuitBreakerMiddleware",
          "file_path": "middleware/circuit_breaker_global.py",
          "exists": true,
          "file_size": 20748,
          "last_modified": "2025-07-11T22:04:13.890258",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "GlobalCircuitBreakerMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": true,
          "imports": [
            "asyncio",
            "json",
            "time",
            "logging",
            "typing.Dict",
            "typing.Optional",
            "typing.Set",
            "fastapi.HTTPException",
            "fastapi.Request",
            "fastapi.Response",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.types.ASGIApp",
            "dataclasses.dataclass",
            "dataclasses.asdict",
            "datetime.datetime",
            "datetime.timedelta",
            "enum.Enum",
            "redis.asyncio"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "GlobalCircuitBreakerMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 296,
          "add_middleware_line": 304
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "ErrorHandlerMiddleware",
      "verification": {
        "file": {
          "middleware": "ErrorHandlerMiddleware",
          "file_path": "middleware/error_handler.py",
          "exists": true,
          "file_size": 1262,
          "last_modified": "2025-07-07T01:54:30.045371",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "ErrorHandlerMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": false,
          "imports": [
            "logging",
            "traceback",
            "fastapi.Request",
            "fastapi.Response",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.middleware.base.RequestResponseEndpoint",
            "starlette.responses.JSONResponse",
            "starlette.status.HTTP_500_INTERNAL_SERVER_ERROR"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "ErrorHandlerMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 20,
          "add_middleware_line": 311
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "CORSMiddleware",
      "verification": {
        "built_in": true
      },
      "status": "\u2705 Built-in"
    },
    {
      "name": "ETagMiddleware",
      "verification": {
        "file": {
          "middleware": "ETagMiddleware",
          "file_path": "middleware/etag_middleware.py",
          "exists": true,
          "file_size": 32721,
          "last_modified": "2025-07-11T22:10:20.987084",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "ETagMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": true,
          "imports": [
            "typing.Callable",
            "typing.Optional",
            "typing.Dict",
            "typing.Any",
            "fastapi.Request",
            "fastapi.Response",
            "fastapi.status",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.types.ASGIApp",
            "starlette.responses.JSONResponse",
            "json",
            "hashlib",
            "datetime.datetime",
            "datetime.timezone",
            "datetime.timedelta",
            "time",
            "asyncio",
            "os",
            "functools.wraps",
            "prometheus_client.Counter",
            "prometheus_client.Histogram",
            "prometheus_client.Gauge",
            "dataclasses.dataclass",
            "enum.Enum",
            "core.versioning.version_service.get_version_service",
            "models.etag.DeltaRequest",
            "core.auth.UserContext",
            "common_logging.setup.get_logger",
            "middleware.etag_analytics.get_etag_analytics",
            "bootstrap.config.get_config",
            "core.resilience.version_service_wrapper.get_resilient_version_service",
            "core.auth_utils.UserContext",
            "json"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "ETagMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 21,
          "add_middleware_line": 325
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "AuthMiddleware",
      "verification": {
        "file": {
          "middleware": "AuthMiddleware",
          "file_path": "middleware/auth_middleware.py",
          "exists": true,
          "file_size": 7738,
          "last_modified": "2025-07-11T20:42:37.354081",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "AuthMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": true,
          "imports": [
            "os",
            "typing.Optional",
            "typing.Callable",
            "typing.Dict",
            "typing.Any",
            "fastapi.Request",
            "fastapi.HTTPException",
            "fastapi.status",
            "fastapi.Response",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.types.ASGIApp",
            "redis.asyncio",
            "json",
            "httpx",
            "inspect",
            "jwt",
            "jwt.PyJWKClient",
            "core.auth.UserContext",
            "bootstrap.config.get_config",
            "middleware.circuit_breaker.CircuitBreakerGroup",
            "middleware.circuit_breaker.CircuitBreakerError",
            "common_logging.setup.get_logger",
            "config.secure_config.secure_config"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "AuthMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 17,
          "add_middleware_line": 330
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "TerminusContextMiddleware",
      "verification": {
        "file": {
          "middleware": "TerminusContextMiddleware",
          "file_path": "middleware/terminus_context_middleware.py",
          "exists": true,
          "file_size": 4200,
          "last_modified": "2025-07-07T13:03:20.296512",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "TerminusContextMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": false,
          "imports": [
            "os",
            "logging",
            "typing.Callable",
            "fastapi.Request",
            "fastapi.Response",
            "fastapi.HTTPException",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "opentelemetry.trace",
            "shared.terminus_context.set_author",
            "shared.terminus_context.set_branch",
            "shared.terminus_context.set_trace_id",
            "shared.terminus_context.set_request_context",
            "shared.terminus_context.format_author",
            "shared.terminus_context.get_default_branch"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "TerminusContextMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 18,
          "add_middleware_line": 335
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "CoreDatabaseContextMiddleware",
      "verification": {
        "file": {
          "middleware": "CoreDatabaseContextMiddleware",
          "file_path": "core/auth_utils/database_context.py",
          "exists": true,
          "file_size": 6016,
          "last_modified": "2025-07-06T07:54:50.738801",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "DatabaseContextMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": false,
          "imports": [
            "contextvars",
            "typing.Optional",
            "typing.TypeVar",
            "typing.Callable",
            "typing.Any",
            "functools.wraps",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "core.auth_utils.UserContext",
            "database.clients.secure_database_adapter.SecureDatabaseAdapter",
            "database.clients.unified_database_client.UnifiedDatabaseClient",
            "database.clients.unified_database_client.get_unified_database_client",
            "common_logging.setup.get_logger"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "CoreDatabaseContextMiddleware",
          "imported": false,
          "added_to_app": true,
          "import_line": null,
          "add_middleware_line": 340
        }
      },
      "status": "\u26a0\ufe0f Partially Active"
    },
    {
      "name": "ScopeRBACMiddleware",
      "verification": {
        "file": {
          "middleware": "ScopeRBACMiddleware",
          "file_path": "core/iam/scope_rbac_middleware.py",
          "exists": true,
          "file_size": 6522,
          "last_modified": "2025-07-08T14:13:03.158327",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "ScopeRBACMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": true,
          "imports": [
            "typing.Callable",
            "typing.Optional",
            "typing.List",
            "typing.Dict",
            "typing.Tuple",
            "fastapi.Request",
            "fastapi.HTTPException",
            "fastapi.status",
            "fastapi.responses.JSONResponse",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.responses.Response",
            "core.auth_utils.UserContext",
            "core.iam.iam_integration.get_iam_integration",
            "core.iam.iam_integration.IAMScope",
            "models.permissions.ResourceType",
            "models.permissions.Action",
            "common_logging.setup.get_logger",
            "shared.terminus_context.get_branch",
            "shared.terminus_context.is_readonly_branch",
            "core.iam.iam_integration.IAMServiceUnavailableError",
            "jwt"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "ScopeRBACMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 22,
          "add_middleware_line": 344
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "RequestIdMiddleware",
      "verification": {
        "file": {
          "middleware": "RequestIdMiddleware",
          "file_path": "middleware/request_id.py",
          "exists": true,
          "file_size": 1049,
          "last_modified": "2025-07-11T23:37:31.990669",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "RequestIdMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": false,
          "imports": [
            "uuid",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.requests.Request",
            "logging"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "RequestIdMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 30,
          "add_middleware_line": 349
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "AuditLogMiddleware",
      "verification": {
        "file": {
          "middleware": "AuditLogMiddleware",
          "file_path": "middleware/audit_log.py",
          "exists": true,
          "file_size": 2053,
          "last_modified": "2025-07-11T23:37:45.254720",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "AuditLogMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": false,
          "imports": [
            "time",
            "json",
            "datetime.datetime",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.requests.Request",
            "logging"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "AuditLogMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 31,
          "add_middleware_line": 354
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "SchemaFreezeMiddleware",
      "verification": {
        "file": {
          "middleware": "SchemaFreezeMiddleware",
          "file_path": "middleware/schema_freeze_middleware.py",
          "exists": true,
          "file_size": 18225,
          "last_modified": "2025-07-07T00:53:07.628374",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "SchemaFreezeMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": true,
          "imports": [
            "typing.Callable",
            "typing.Optional",
            "typing.Dict",
            "typing.Any",
            "typing.List",
            "datetime.datetime",
            "datetime.timezone",
            "fastapi.Request",
            "fastapi.HTTPException",
            "fastapi.status",
            "fastapi.responses.JSONResponse",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.responses.Response",
            "core.auth.UserContext",
            "core.branch.lock_manager.get_lock_manager",
            "core.branch.lock_manager.LockConflictError",
            "models.branch_state.BranchState",
            "common_logging.setup.get_logger",
            "datetime.datetime",
            "datetime.timezone"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "SchemaFreezeMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 25,
          "add_middleware_line": 359
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "ThreeWayMergeMiddleware",
      "verification": {
        "file": {
          "middleware": "ThreeWayMergeMiddleware",
          "file_path": "middleware/three_way_merge.py",
          "exists": true,
          "file_size": 27047,
          "last_modified": "2025-07-11T23:38:16.135610",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "ThreeWayMergeMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": true,
          "imports": [
            "asyncio",
            "json",
            "time",
            "abc.ABC",
            "abc.abstractmethod",
            "dataclasses.dataclass",
            "dataclasses.field",
            "datetime.datetime",
            "enum.Enum",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Any",
            "typing.Callable",
            "typing.Set",
            "typing.Tuple",
            "typing.Union",
            "typing.TypeVar",
            "typing.Generic",
            "difflib",
            "copy",
            "hashlib",
            "logging",
            "collections.defaultdict",
            "uuid",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.requests.Request",
            "starlette.responses.JSONResponse"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "ThreeWayMergeMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 26,
          "add_middleware_line": 364
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "EventStateStoreMiddleware",
      "verification": {
        "file": {
          "middleware": "EventStateStoreMiddleware",
          "file_path": "middleware/event_state_store.py",
          "exists": true,
          "file_size": 25335,
          "last_modified": "2025-07-11T23:38:40.723248",
          "has_middleware_class": true,
          "imports_starlette": true
        },
        "implementation": {
          "class_name": "EventStateStoreMiddleware",
          "has_class": true,
          "has_dispatch_method": true,
          "has_init_method": true,
          "imports": [
            "asyncio",
            "json",
            "time",
            "abc.ABC",
            "abc.abstractmethod",
            "dataclasses.dataclass",
            "dataclasses.field",
            "datetime.datetime",
            "datetime.timedelta",
            "enum.Enum",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Any",
            "typing.Callable",
            "typing.Set",
            "typing.Tuple",
            "typing.Type",
            "typing.TypeVar",
            "typing.Generic",
            "redis.asyncio",
            "collections.defaultdict",
            "logging",
            "uuid",
            "hashlib",
            "pickle",
            "zlib",
            "base64",
            "starlette.middleware.base.BaseHTTPMiddleware",
            "starlette.requests.Request",
            "logging"
          ],
          "dispatch_is_async": true,
          "base_classes": [
            "BaseHTTPMiddleware"
          ]
        },
        "registration": {
          "middleware": "EventStateStoreMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 27,
          "add_middleware_line": 370
        }
      },
      "status": "\u2705 Fully Active"
    },
    {
      "name": "IssueTrackingMiddleware",
      "verification": {
        "file": {
          "middleware": "IssueTrackingMiddleware",
          "file_path": "middleware/issue_tracking_middleware.py",
          "exists": true,
          "file_size": 12705,
          "last_modified": "2025-07-06T07:54:29.734322",
          "has_middleware_class": true,
          "imports_starlette": false
        },
        "implementation": {
          "class_name": "IssueTrackingMiddleware",
          "has_class": true,
          "has_dispatch_method": false,
          "has_init_method": true,
          "imports": [
            "typing.Optional",
            "typing.List",
            "typing.Dict",
            "typing.Any",
            "typing.Callable",
            "fastapi.Request",
            "fastapi.Response",
            "fastapi.HTTPException",
            "fastapi.status",
            "fastapi.responses.JSONResponse",
            "json",
            "core.auth.UserContext",
            "core.issue_tracking.issue_service.get_issue_service",
            "models.issue_tracking.IssueReference",
            "models.issue_tracking.parse_issue_reference",
            "models.issue_tracking.extract_issue_references",
            "common_logging.setup.get_logger"
          ],
          "base_classes": []
        },
        "registration": {
          "middleware": "IssueTrackingMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 32,
          "add_middleware_line": 377
        }
      },
      "status": "\u26a0\ufe0f Partially Active"
    },
    {
      "name": "ComponentMiddleware",
      "verification": {
        "file": {
          "middleware": "ComponentMiddleware",
          "file_path": "middleware/component_middleware.py",
          "exists": true,
          "file_size": 26232,
          "last_modified": "2025-07-02T19:45:58.826638",
          "has_middleware_class": true,
          "imports_starlette": false
        },
        "implementation": {
          "class_name": "ComponentMiddleware",
          "has_class": false,
          "has_dispatch_method": false,
          "has_init_method": false,
          "imports": [
            "asyncio",
            "time",
            "abc.ABC",
            "abc.abstractmethod",
            "dataclasses.dataclass",
            "dataclasses.field",
            "datetime.datetime",
            "enum.Enum",
            "typing.Dict",
            "typing.List",
            "typing.Optional",
            "typing.Any",
            "typing.Callable",
            "typing.Set",
            "typing.Tuple",
            "typing.Type",
            "typing.TypeVar",
            "typing.Union",
            "contextvars.ContextVar",
            "inspect",
            "logging",
            "traceback",
            "collections.defaultdict",
            "collections.OrderedDict",
            "functools",
            "uuid",
            "uuid",
            "hashlib",
            "json"
          ]
        },
        "registration": {
          "middleware": "ComponentMiddleware",
          "imported": true,
          "added_to_app": true,
          "import_line": 33,
          "add_middleware_line": 382
        }
      },
      "status": "\u26a0\ufe0f Partially Active"
    },
    {
      "name": "RateLimitingMiddleware",
      "verification": {
        "file": {
          "middleware": "RateLimitingMiddleware",
          "file_path": "middleware/rate_limiting/middleware.py",
          "exists": false
        }
      },
      "status": "\u274c Inactive"
    }
  ],
  "summary": {
    "total": 16,
    "files_exist": 14,
    "implementations_valid": 12,
    "registered_in_app": 13,
    "fully_active": 12
  }
}